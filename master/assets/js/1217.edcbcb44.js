(window.webpackJsonp=window.webpackJsonp||[]).push([[1217],{2593:function(t,s,a){"use strict";a.r(s);var e=a(18),l=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"使用-jmavsim-进行多飞行器仿真"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-jmavsim-进行多飞行器仿真"}},[t._v("#")]),t._v(" 使用 JMAVSim 进行多飞行器仿真")]),t._v(" "),a("p",[t._v("本主题介绍如何使用 JMAVSim和 SITL 模拟多架 (多旋翼) 无人机。 在仿真中所有无人机实例均在同一位置启动。")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("Tip")]),t._v(" 这是模拟多架运行 PX4 无人机的最简单的方法。 可用于测试 "),a("em",[t._v("QGroundControl")]),t._v("对多无人机的支持 (或 "),a("a",{attrs:{href:"https://sdk.dronecode.org/en/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Dronecode SDK"),a("OutboundLink")],1),t._v(") 。 "),a("RouterLink",{attrs:{to:"/zh/simulation/multi-vehicle-simulation.html"}},[t._v("Multi-Vehicle Simulation with Gazebo")]),t._v(" 应用于使用多架无人机进行无人机蜂群模拟，或者用于测试仅有 Gazebo 仿真平台支持的一些特性，比如计算机视觉。")],1)]),t._v(" "),a("p",[a("span")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("Note")]),t._v(" JMAVSim 多飞行器仿真仅适用于 PX4 v1.8.0 及更高版本。")])]),t._v(" "),a("h2",{attrs:{id:"如何启动多个飞行器实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何启动多个飞行器实例"}},[t._v("#")]),t._v(" 如何启动多个飞行器实例")]),t._v(" "),a("p",[t._v("要启动多个无人机实例 请执行以下操作（每架无人机使用一个单独的端口）：")]),t._v(" "),a("ol",[a("li",[t._v("编译 PX4 "),a("code",[t._v("make px4_sitl_default")]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("make px4_sitl_default\n")])])])]),t._v(" "),a("li",[t._v("运行 "),a("strong",[t._v("sitl_multiple_run.sh")]),t._v(", 指定要启动的飞行器的实例数目 (例如 2): "),a("code",[t._v("./Tools/sitl_multiple_run.sh 2")]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("./Tools/sitl_multiple_run.sh 2\n")])])])]),t._v(" "),a("li",[t._v("启动第一个实例: "),a("code",[t._v("./Tools/jmavsim_run.sh")]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("./Tools/jmavsim_run.sh -l\n")])])])])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1. 启动后续实例，并为该实例指定 *仿真* UDP 端口（所有命令应在同一行输入，以空格键隔开，完成输入后直接回车运行，此时由于所有实例的启动位置都相同所以无法分辨启动的实例个数，可通过查看端口号进行查询）： `./Tools/jmavsim_run.sh -p 14561` 端口号应设置为 `14560+i` for `i` in `[0, N-1]`。\n")])])]),a("p",[t._v("./Tools/jmavsim_run.sh -p 4561 -l")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("端口号应该被设置为 `4560+i` ， `i` 的范围为 `[0, N-1]` 。\n\n*QGroundControl* 和开发者 APIs (比如 Dronecode SDK) 可以通过代码默认端口连接到所有实例（分别为14550 和 14540）。\n\n像 *MAVSDK* 或者 *MAVROS* 开发者 APIs 接口就是通过连接 UDP 接口 14540 （第一个实例）， UDP 接口 14541（第二个实例），以此类推。\n\n## 额外资源\n\n* 更多UDP端口配置请参考 [Simulation](../simulation/README.md)。\n")])])])])}),[],!1,null,null,null);s.default=l.exports}}]);
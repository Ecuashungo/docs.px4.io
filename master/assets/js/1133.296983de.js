(window.webpackJsonp=window.webpackJsonp||[]).push([[1133],{2362:function(t,s,a){"use strict";a.r(s);var n=a(18),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"ubuntu-lts-debian-linux-的开发环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ubuntu-lts-debian-linux-的开发环境"}},[t._v("#")]),t._v(" Ubuntu LTS/Debian Linux 的开发环境")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://wiki.ubuntu.com/LTS",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ubuntu linux lts"),a("OutboundLink")],1),t._v("（16.04）是标准的/首选的 Linux 开发操作系统。 Linux允许您构建"),a("RouterLink",{attrs:{to:"/zh/setup/dev_env.html#supported-targets"}},[t._v("所有PX4目标")]),t._v("（基于NuttX的硬件、高通骁龙飞控硬件、基于Linux的硬件、仿真、ROS）。")],1),t._v(" "),a("p",[t._v("以下说明说明了如何 "),a("em",[t._v("手动")]),t._v(" 设置每个受支持的目标的开发环境。")]),t._v(" "),a("ul",[a("li",[a("strong",[a("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/master/Tools/setup/ubuntu.sh",target:"_blank",rel:"noopener noreferrer"}},[t._v("ubuntu.sh"),a("OutboundLink")],1)]),t._v(": Installs "),a("RouterLink",{attrs:{to:"/zh/simulation/gazebo.html"}},[t._v("Gazebo 9")]),t._v(" and "),a("RouterLink",{attrs:{to:"/zh/simulation/jmavsim.html"}},[t._v("jMAVSim")]),t._v(" simulators and/or "),a("RouterLink",{attrs:{to:"/zh/dev_setup/building_px4.html#nuttx"}},[t._v("NuttX/Pixhawk")]),t._v(" tools. Does not include dependencies for "),a("a",{attrs:{href:"#fast_rtps"}},[t._v("FastRTPS")]),t._v(". ")],1),t._v(" "),a("li",[a("strong",[a("a",{attrs:{href:"https://raw.githubusercontent.com/PX4/Devguide/master/build_scripts/ubuntu_sim.sh",target:"_blank",download:""}},[t._v("ubuntu_sim.sh")])]),t._v(": "),a("strong",[t._v("ubuntu_sim_common_deps.sh")]),t._v(" + "),a("a",{attrs:{href:"#gazebo"}},[t._v("Gazebo8")]),t._v(" 模拟器。 ")])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("Tip")]),t._v(" 该脚本已经在全新Ubuntu 16.04安装测试通过。 如果安装在除上述提到的系统或其他Ubuntu版本上，则它们"),a("em",[t._v("可能")]),t._v("无法正常工作。")])]),t._v(" "),a("p",[t._v("The instructions below explain how to download and use the scripts.")]),t._v(" "),a("p",[a("a",{attrs:{id:"sim_nuttx"}})]),t._v(" "),a("h2",{attrs:{id:"一键安装脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一键安装脚本"}},[t._v("#")]),t._v(" 一键安装脚本")]),t._v(" "),a("p",[t._v("这些脚本是:")]),t._v(" "),a("p",[t._v("使用脚本：")]),t._v(" "),a("ol",[a("li",[a("strong",[a("a",{attrs:{href:"https://raw.githubusercontent.com/PX4/Devguide/master/build_scripts/ubuntu_sim_common_deps.sh",target:"_blank",download:""}},[t._v("ubuntu_sim_common_deps.sh")])]),t._v("："),a("a",{attrs:{href:"#common-dependencies"}},[t._v("通用依赖")]),t._v("，"),a("a",{attrs:{href:"#jmavsim"}},[t._v("jMAVSim")]),t._v(" 模拟器"),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/PX4/PX4-Autopilot.git --recursive\n")])])])]),t._v(" "),a("li",[t._v("运行 bash 脚本（比如运行 "),a("strong",[t._v("ubuntu_sim.sh")]),t._v(" ）： bash source ubuntu_sim.sh 所有弹出的提示均确认通过。"),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v(" ./Tools/setup/ubuntu.sh\n")])])]),a("ul",[a("li",[t._v("Acknowledge any prompts as the script progress.")]),t._v(" "),a("li",[t._v("You can use the "),a("code",[t._v("--no-nuttx")]),t._v(" and "),a("code",[t._v("--no-sim-tools")]),t._v(" to omit the nuttx and/or simulation tools.")])])]),t._v(" "),a("li",[t._v("Restart the computer on completion.")])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("Tip")]),t._v(" 在设置构建/模拟工具链之后，有关其他有用工具的信息，请参阅 "),a("RouterLink",{attrs:{to:"/zh/setup/generic_dev_tools.html"}},[t._v("附加工具")]),t._v("。")],1)]),t._v(" "),a("p",[t._v("用户应先加入组 ”dialout“：")]),t._v(" "),a("ul",[a("li",[t._v("** Note** PX4兼容Gazebo7、8和9。 上面的 "),a("a",{attrs:{href:"http://gazebosim.org/tutorials?tut=install_ubuntu&cat=install",target:"_blank",rel:"noopener noreferrer"}},[t._v("安装说明"),a("OutboundLink")],1),t._v(" 是关于安装 Gazebo 9 的。")]),t._v(" "),a("li",[a("strong",[t._v("Note")]),t._v(" 如果您要使用 ros，请按照以下部分中的 "),a("a",{attrs:{href:"#rosgazebo"}},[t._v("ROS/Gazebo")]),t._v(" 说明操作（这些操作将自动安装 gazebo，作为 ros 安装的一部分）。")]),t._v(" "),a("li",[t._v("You can verify the the NuttX installation by confirming the gcc version as shown:"),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arm")]),t._v("-none-eabi-gcc --version\n\n arm-none-eabi-gcc "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GNU Tools "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" Arm Embedded Processors "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("-2017-q4-major"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7.2")]),t._v(".1 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20170904")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("release"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ARM/embedded-7-branch revision "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255204")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n Copyright "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("C"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2017")]),t._v(" Free Software Foundation, Inc.\n This is "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),t._v(" software"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" see the "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" copying conditions.  There is NO\n warranty"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" not even "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n```"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("-- Do we need to "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" to our scripts or can we assume correct version installs over?\n")])])])])]),t._v(" "),a("p",[t._v("Remove any old versions of the arm-none-eabi toolchain.")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" remove gcc-arm-none-eabi gdb-arm-none-eabi binutils-arm-none-eabi gcc-arm-embedded\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" add-apt-repository --remove ppa:team-gcc-arm-embedded/ppa\n")])])]),a("p",[t._v("--\x3e"),a("a",{attrs:{id:"raspberry-pi-hardware"}})]),t._v(" "),a("h2",{attrs:{id:"权限设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#权限设置"}},[t._v("#")]),t._v(" 权限设置")]),t._v(" "),a("p",[t._v("The following instructions explain how to set up a build toolchain for RasPi on "),a("em",[t._v("Ubuntu 18.04")]),t._v(".")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("Warning")]),t._v(" To build for Ubuntu 20.04 (focal) you must use docker (the GCC toolchain on Ubuntu 20.04 can build PX4, but the generated binary files are too new to run on actual Pi). For more information see [PilotPi with Raspberry Pi OS")])]),t._v(" "),a("h1",{attrs:{id:"ros-kinetic-gazebo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ros-kinetic-gazebo"}},[t._v("#")]),t._v(" ROS Kinetic/Gazebo")]),t._v(" "),a("p",[t._v("更新包列表，并且安装以下依赖：")]),t._v(" "),a("ol",[a("li",[t._v("有关在树莓派上使用 PX4（包括本地构建 PX4）的其他开发人员信息，请参见此处："),a("a",{attrs:{href:"https://docs.px4.io/en/flight_controller/raspberry_pi_navio2.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Raspberry pi 2/navio2 autopilot"),a("OutboundLink")],1),t._v("。 "),t._v(" "),a("ol",[a("li",[a("strong",[a("a",{attrs:{href:"https://raw.githubusercontent.com/PX4/Devguide/master/build_scripts/ubuntu_sim_nuttx.sh",target:"_blank",download:""}},[t._v("ubuntu_sim_nuttx.sh")])]),t._v("："),a("strong",[t._v("ubuntu_sim.sh")]),t._v(" + NuttX 工具。")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v(" ubuntu.sh --no-nuttx --no-sim-tools\n")])])])]),t._v(" "),a("li",[t._v("Then setup an cross-compiler (either GCC or clang) as described in the following sections.")])]),t._v(" "),a("h3",{attrs:{id:"如何使用脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何使用脚本"}},[t._v("#")]),t._v(" 如何使用脚本")]),t._v(" "),a("p",[t._v("Ubuntu software repository provides a set of pre-compiled toolchains. Note that Ubuntu Focal comes up with "),a("code",[t._v("gcc-9-arm-linux-gnueabihf")]),t._v(" as its default installation which is not fully supported, so we must manually install "),a("code",[t._v("gcc-8-arm-linux-gnueabihf")]),t._v(" and set it as the default toolchain. This guide also applies to earlier Ubuntu releases (Bionic). The following instruction assumes you haven't installed any version of arm-linux-gnueabihf, and will set up the default executable with "),a("code",[t._v("update-alternatives")]),t._v(". Install them with the terminal command:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("usermod")]),t._v(" -a -G dialout "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$USER")]),t._v("\n")])])]),a("p",[t._v('{% include "_ninja_build_system.md" %}')]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" remove modemmanager\n")])])]),a("h3",{attrs:{id:"jmavsim"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jmavsim"}},[t._v("#")]),t._v(" jMAVSim")]),t._v(" "),a("p",[t._v("If you want to build PX4 for ARM64 devices, this section is required.")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update -y\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("zip")]),t._v(" qtcreator cmake "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    build-essential genromfs ninja-build exiftool vim-common -y\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Required python packages")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" python-argparse "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    python-empy python-toml python-numpy python-yaml "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    python-dev python-pip -y\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -H pip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --upgrade pip \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -H pip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" pandas jinja2 pyserial cerberus\n")])])]),a("h3",{attrs:{id:"gazebo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gazebo"}},[t._v("#")]),t._v(" Gazebo")]),t._v(" "),a("p",[t._v("以下说明可用于将 FastRTPS 1.5 二进制文件安装到您的主目录中。")]),t._v(" "),a("p",[t._v("We recommend you to get clang from the Ubuntu software repository, as shown below:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# optional python tools\nsudo -H pip install pyulog\n")])])]),a("p",[t._v("为 "),a("RouterLink",{attrs:{to:"/zh/simulation/jmavsim.html"}},[t._v("jMAVSim Simulation")]),t._v(" 安装依赖。")],1),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/raspberrypi/tools.git "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("HOME")]),t._v("}")]),t._v("/rpi-tools\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# test compiler")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/rpi-tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian-x64/bin/arm-linux-gnueabihf-gcc -v\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# permanently update PATH variable by modifying ~/.profile")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'export PATH="),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$PATH")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/rpi-tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian-x64/bin'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" ~/.profile\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# update PATH variable only for this session")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PATH")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$PATH")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/rpi-tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian-x64/bin\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v("\n")])])]),a("h3",{attrs:{id:"detailed-information"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#detailed-information"}},[t._v("#")]),t._v(" Detailed Information")]),t._v(" "),a("p",[t._v("为 "),a("RouterLink",{attrs:{to:"/zh/simulation/gazebo.html"}},[t._v("jMAVSim Simulation")]),t._v(" 安装依赖。")],1),t._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/zh/flight_controller/raspberry_pi_navio2.html"}},[t._v("Raspberry Pi 2/3 Navio2 Autopilot")]),t._v(".")],1),t._v(" "),a("li",[t._v("在安装"),a("a",{attrs:{href:"#snapdragon-flight"}},[t._v("高通骁龙飞控")]),t._v(" 或 "),a("a",{attrs:{href:"#raspberry-pi-hardware"}},[t._v("树莓派/Parrot Bebop")]),t._v(" 之前， 你可以先运行它。")])]),t._v(" "),a("p",[a("a",{attrs:{id:"rosgazebo"}})]),t._v(" "),a("h2",{attrs:{id:"ros-gazebo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ros-gazebo"}},[t._v("#")]),t._v(" ROS/Gazebo")]),t._v(" "),a("p",[t._v("This section explains how to install "),a("RouterLink",{attrs:{to:"/zh/ros/"}},[t._v("ROS/Gazebo")]),t._v(' ("Melodic") for use with PX4.')],1),t._v(" "),a("p",[t._v("To install the development toolchain:")]),t._v(" "),a("ol",[a("li",[a("strong",[a("a",{attrs:{href:"https://raw.githubusercontent.com/PX4/Devguide/master/build_scripts/ubuntu_sim_ros_gazebo.sh",target:"_blank",download:""}},[t._v("ubuntu_sim_ros_gazebo.sh")])]),t._v(": "),a("strong",[t._v("ubuntu_sim_common_deps.sh")]),t._v(" + "),a("a",{attrs:{href:"#rosgazebo"}},[t._v("ROS/Gazebo and MAVROS")]),t._v(". "),t._v(" "),a("ol",[a("li",[t._v("下载脚本")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("ROS Gazebo: http://wiki.ros.org/kinetic/Installation/Ubuntu\n")])])]),t._v("You may need to acknowledge some prompts as the script progresses.")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("* ROS Kinetic 默认与 Gazebo "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" 一起安装（为了简化 ROS 的开发，我们使用的默认而不是 Gazebo "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("）。\n* 你的 catkin （ROS 构建系统）工作目录生成在**~/catkin_ws/**。\n* 这些说明来自 ROS Wiki "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Ubuntu 页 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("http://wiki.ros.org/kinetic/Installation/Ubuntu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("。\n\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 通用依赖")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" protobuf-compiler libeigen3-dev libopencv-dev -y\n* "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("开发环境"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/flight_controller/snapdragon_flight_dev_environment_installation.md"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n* "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("软件安装"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/flight_controller/snapdragon_flight_software_installation.md"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n* "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("配置"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/flight_controller/snapdragon_flight_configuration.md"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fast_rtps"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## FastRTPS 安装")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("eProsima Fast RTPS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("http://eprosima-fast-rtps.readthedocs.io/en/latest/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 是 RTPS协议的 C++ 实现库。 通过 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("RTPS/ROS2 接口: px4-frtps bridge "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/middleware/micrortps.md"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 使用 FastRTPS，允许与离板组件共享 PX4 uORB 话题。\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 模拟器依赖")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" ros-kinetic-desktop-full -y\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Gazebo dependencies")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" rosdep init rosdep update\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);
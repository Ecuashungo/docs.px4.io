(window.webpackJsonp=window.webpackJsonp||[]).push([[599],{2064:function(t,s,a){"use strict";a.r(s);var e=a(19),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"raspberry-pi-2-3-navio2-자동조종장치"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#raspberry-pi-2-3-navio2-자동조종장치"}},[t._v("#")]),t._v(" Raspberry Pi 2/3 Navio2 자동조종장치")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("PX4에서는 이 제품을 제조하지 않습니다. 하드웨어 지원과 호환 문제는 [제조사](https://emlid.com/)에 문의하십시오.")])]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),e("p",[t._v("이 비행 콘트롤러에 대한 PX4는 "),e("RouterLink",{attrs:{to:"/ko/flight_controller/autopilot_experimental.html"}},[t._v("테스트 단계")]),t._v("입니다.")],1)]),t._v(" "),e("p",[t._v("Raspberry Pi 2/3 Navio2 자동조종장치의 개발 개요 문서입니다. 이를 통해 PX4를 빌드하고 Raspberry Pi로 전송하거나 빌드할 수 있습니다.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(807),alt:"Ra Pi Image"}})]),t._v(" "),e("h2",{attrs:{id:"운영체제-이미지"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#운영체제-이미지"}},[t._v("#")]),t._v(" 운영체제 이미지")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://docs.emlid.com/navio2/configuring-raspberry-pi",target:"_blank",rel:"noopener noreferrer"}},[t._v("Navio 2용 Emlid RT Raspbian 이미지"),e("OutboundLink")],1),t._v("를 사용하십시오. 기본 이미지에는 아래 표시된 대부분의 설정이 완료되어 있습니다.")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),e("p",[t._v("시스템 커널을 업그레이드 하지마십시오. 업그레이드하면 필요한 HW 지원이 없는 새 커널을 설치할 수 있습니다. "),e("code",[t._v("ls /sys/class/pwm")]),t._v("으로 확인할 수 있습니다. 디렉토리가 비어 있으면 안됩니다.")])]),t._v(" "),e("h2",{attrs:{id:"접근-설정"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#접근-설정"}},[t._v("#")]),t._v(" 접근 설정")]),t._v(" "),e("p",[t._v('Raspbian 이미지에는 이미 SSH 설정이 되어있습니다. 사용자 이름은 "pi"이고, 비밀번호는 "raspberry"입니다. 네트워크를 통해 RPi2/3에 연결한 다음(이더넷은 기본적으로 DHCP와 함께 제공되도록 설정 됨) WiFi 액세스 설정을 할 수 있습니다. 이 가이드에서는 사용자 이름과 암호가 기본값으로 유지된다고 가정합니다.')]),t._v(" "),e("p",[t._v("RPi2/3를 설정하여 로컬 Wi-Fi에 연결하려면 "),e("a",{attrs:{href:"https://www.raspberrypi.org/documentation/configuration/wireless/wireless-cli.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("이 가이드"),e("OutboundLink")],1),t._v("를 참고하십시오.")]),t._v(" "),e("p",[t._v("네트워크에서 라즈베리파이의 IP 주소를 검색한 다음, SSH를 사용하여 연결할 수 있습니다.")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v(" pi@"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("IP-ADDRESS"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),e("h2",{attrs:{id:"파일시스템-확장"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#파일시스템-확장"}},[t._v("#")]),t._v(" 파일시스템 확장")]),t._v(" "),e("p",[t._v("OS를 설치후 "),e("a",{attrs:{href:"https://www.raspberrypi.org/documentation/configuration/raspi-config.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("파일시스템을 확장"),e("OutboundLink")],1),t._v("하여 SD 카드에 전영역을 확보하십시오.")]),t._v(" "),e("h2",{attrs:{id:"navio-rgb-오버레이-비활성화"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navio-rgb-오버레이-비활성화"}},[t._v("#")]),t._v(" Navio RGB 오버레이 비활성화")]),t._v(" "),e("p",[t._v("기존 Navio RGB 오버레이는 PX4에서 RGB Led 용으로 사용하는 GPIO를 요구합니다. "),e("code",[t._v("navio-rgb")]),t._v(" 오버레이를 활성화하는 줄에 주석을 달아 "),e("code",[t._v("/boot/config.txt")]),t._v("를 편집합니다.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("#dtoverlay=navio-rgb\n")])])]),e("h2",{attrs:{id:"호스트명-변경"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#호스트명-변경"}},[t._v("#")]),t._v(" 호스트명 변경")]),t._v(" "),e("p",[t._v('네트워크에있는 다른 라즈베리파이와 충돌을 방지하려면 기본 호스트 이름을 변경하는 것이 좋습니다. 설정에 "px4 autopilot"을 사용했습니다. SSH를 통해 라즈베리파이에 연결하고 아래의 지침을 따르십시오.')]),t._v(" "),e("p",[t._v("호스트명 파일을 편집합니다.")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("nano")]),t._v(" /etc/hostname\n")])])]),e("p",[t._v("`raspberry</ 0>를 원하는 호스트명으로 변경하십시오(제한된 문자가 있는 한 단어 적용).")]),e("p"),t._v(" "),e("p",[t._v("다음으로 호스트 파일을 변경해야합니다.")]),t._v(" "),e("pre",[e("code",{staticClass:"sh"},[t._v("sudo nano /etc/hosts\n`")])]),t._v(" "),e("p",[e("code",[t._v("127.0.1.1 raspberry")]),t._v(" 항목을 "),e("code",[t._v("127.0.1.1 <YOURNEWHOSTNAME>")]),t._v("로 변경합니다.")]),t._v(" "),e("p",[t._v("완료후 라즈베리파이를 재부팅하여 네트워크에 다시 연결합니다.")]),t._v(" "),e("h2",{attrs:{id:"avahi-설정-zeroconf"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#avahi-설정-zeroconf"}},[t._v("#")]),t._v(" Avahi 설정 (Zeroconf)")]),t._v(" "),e("p",[t._v("라즈베리파이에 쉽게 연결하려면 호스트 이름을 직접 지정하여 모든 네트워크에서 쉽게 접근할 수 있는 Avahi(Zeroconf)를 설정하는 것이 좋습니다.")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" avahi-daemon\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" insserv avahi-daemon\n")])])]),e("p",[t._v("다음으로 Avahi 설정 파일을 편집합니다.")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("nano")]),t._v(" /etc/avahi/services/multiple.service\n")])])]),e("p",[t._v("다음 내용을 파일에 추가하십시오.")]),t._v(" "),e("div",{staticClass:"language-xml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-xml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token prolog"}},[t._v("<?xml version=\"1.0\" standalone='no'?>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token doctype"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<!")]),e("span",{pre:!0,attrs:{class:"token doctype-tag"}},[t._v("DOCTYPE")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token name"}},[t._v("service-group")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token name"}},[t._v("SYSTEM")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"avahi-service.dtd"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("service-group")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("name")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("replace-wildcards")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("yes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("%h"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("service")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("_device-info._tcp"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("port")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("0"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("port")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("txt-record")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("model=RackMac"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("txt-record")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("service")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("service")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("_ssh._tcp"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("port")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("22"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("port")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("service")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("service-group")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n")])])]),e("p",[t._v("데몬 다시 시작합니다.")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" /etc/init.d/avahi-daemon restart\n")])])]),e("p",[t._v("이제, 완료되었습니다. 네트워크의 모든 컴퓨터에서 호스트 이름으로 라즈베리파이에 직접 접근할 수 있어야 합니다.")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("검색하려면 호스트 이름에 .local을 추가해야 하는 경우도 있습니다.")])]),t._v(" "),e("h2",{attrs:{id:"ssh-공개키-설정"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ssh-공개키-설정"}},[t._v("#")]),t._v(" SSH 공개키 설정")]),t._v(" "),e("p",[t._v("In order to allow the PX4 development environment to automatically push executables to your board, you need to configure passwordless access to the RPi. We use the public-key authentication method for this.")]),t._v(" "),e("p",[t._v("To generate new SSH keys enter the following commands (Choose a sensible hostname such as "),e("code",[t._v("<YOURNANME>@<YOURDEVICE>")]),t._v(". Here we have used "),e("code",[t._v("pi@px4autopilot")]),t._v(")")]),t._v(" "),e("p",[t._v("These commands need to be run on the HOST development computer!")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("ssh-keygen -t rsa -C pi@px4autopilot\n")])])]),e("p",[t._v("Upon entering this command, you'll be asked where to save the key. We suggest you save it in the default location ($HOME/.ssh/id_rsa) by just hitting Enter.")]),t._v(" "),e("p",[t._v("Now you should see the files "),e("code",[t._v("id_rsa")]),t._v(" and "),e("code",[t._v("id_rsa.pub")]),t._v(" in your "),e("code",[t._v(".ssh")]),t._v(" directory in your home folder:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" ~/.ssh\nauthorized_keys  id_rsa  id_rsa.pub  known_hosts\n")])])]),e("p",[t._v("The "),e("code",[t._v("id_rsa")]),t._v(" file is your private key. Keep this on the development computer. The "),e("code",[t._v("id_rsa.pub")]),t._v(" file is your public key. This is what you put on the targets you want to connect to.")]),t._v(" "),e("p",[t._v("To copy your public key to your Raspberry Pi, use the following command to append the public key to your authorized_keys file on the Pi, sending it over SSH:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" ~/.ssh/id_rsa.pub "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v(" pi@px4autopilot "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cat >> .ssh/authorized_keys'")]),t._v("\n")])])]),e("p",[t._v('Note that this time you will have to authenticate with your password ("raspberry" by default).')]),t._v(" "),e("p",[t._v("Now try "),e("code",[t._v("ssh pi@px4autopilot")]),t._v(" and you should connect without a password prompt.")]),t._v(" "),e("p",[t._v('If you see a message "'),e("code",[t._v("Agent admitted failure to sign using the key.")]),t._v('" then add your RSA or DSA identities to the authentication agent, ssh-agent and the execute the following command:')]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("ssh-add\n")])])]),e("p",[t._v("If this did not work, delete your keys with "),e("code",[t._v("rm ~/.ssh/id*")]),t._v(" and follow the instructions again.")]),t._v(" "),e("h2",{attrs:{id:"testing-file-transfer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#testing-file-transfer"}},[t._v("#")]),t._v(" Testing file transfer")]),t._v(" "),e("p",[t._v("We use SCP to transfer files from the development computer to the target board over a network (WiFi or Ethernet).")]),t._v(" "),e("p",[t._v("To test your setup, try pushing a file from the development PC to the Pi over the network now. Make sure the Pi has network access, and you can SSH into it.")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" hello.txt\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("scp")]),t._v(" hello.txt pi@px4autopilot:/home/pi/\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" hello.txt\n")])])]),e("p",[t._v('This should copy over a "hello.txt" file into the home folder of your RPi. Validate that the file was indeed copied, and you can proceed to the next step.')]),t._v(" "),e("h2",{attrs:{id:"building-the-code"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#building-the-code"}},[t._v("#")]),t._v(" Building the Code")]),t._v(" "),e("p",[t._v('Either build the source code on your development computer ("cross-compiler" build) or build it on the RaPi ("native" build) as shown below.')]),t._v(" "),e("h3",{attrs:{id:"cross-compiler-build"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cross-compiler-build"}},[t._v("#")]),t._v(" Cross-compiler Build")]),t._v(" "),e("p",[t._v("First install the "),e("RouterLink",{attrs:{to:"/ko/dev_setup/dev_env_linux.html"}},[t._v("standard developer environment on your Ubunto development computer")]),t._v(".")],1),t._v(" "),e("p",[t._v("Set the IP (or hostname) of your RPi using:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("AUTOPILOT_HOST")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".X.X\n")])])]),e("p",[t._v("or")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("AUTOPILOT_HOST")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("pi_hostname.domain\n")])])]),e("div",{staticClass:"custom-block note"},[e("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),e("p",[t._v("The value of the environment variable should be set before the build, or "),e("code",[t._v("make upload")]),t._v(" will fail to find your RPi.")])]),t._v(" "),e("p",[t._v("Build the executable file:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" PX4-Autopilot\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" emlid_navio2 "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for cross-compiler build")]),t._v("\n")])])]),e("p",[t._v('The "px4" executable file is in the directory '),e("strong",[t._v("build/emlid_navio2_default/")]),t._v(". Make sure you can connect to your RPi over ssh, see "),e("a",{attrs:{href:"#setting-up-access"}},[t._v("instructions how to access your RPi")]),t._v(".")]),t._v(" "),e("p",[t._v("Then upload it with:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" PX4-Autopilot\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" emlid_navio2 upload "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for cross-compiler build")]),t._v("\n")])])]),e("p",[t._v("Then, connect over ssh and run it with (as root):")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ~/px4\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" ./bin/px4 -s px4.config\n")])])]),e("h3",{attrs:{id:"native-build"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#native-build"}},[t._v("#")]),t._v(" Native Build")]),t._v(" "),e("p",[t._v("A native build is one that you run directly on the Pi (the other option is to run builds on a development computer which cross-compiles for the Pi, and pushes the PX4 executable binary directly to the Pi).")]),t._v(" "),e("p",[t._v("Run these commands on the Pi to setup the build system on the Pi.")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" cmake python-empy\n")])])]),e("p",[t._v("Clone the Firmware directly onto the Pi then build the native build target ("),e("code",[t._v("emlid_navio2_native")]),t._v(").")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/PX4/PX4-Autopilot.git --recursive\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" PX4-Autopilot\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" emlid_navio2_native\n")])])]),e("p",[t._v('The "px4" executable file is in the directory '),e("strong",[t._v("build/emlid_navio2_native/")]),t._v(". Run it directly with:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" ./build/emlid_navio2_native/px4 build/emlid_navio2_native/etc -s ./posix-configs/rpi/px4.config\n")])])]),e("p",[t._v("A successful build followed by executing px4 will give you something like this:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("br /"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("______  __   __    ___\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ___ "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" / /   /   "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_/ /  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" V /   / /"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  __/   /   "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("  / /_"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     / /^"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("___  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("_"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("/   "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("/     "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_/\n\npx4 starting.\n\n\npxh"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),e("h2",{attrs:{id:"autostart"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#autostart"}},[t._v("#")]),t._v(" Autostart")]),t._v(" "),e("p",[t._v("To autostart px4, add the following to the file "),e("strong",[t._v("/etc/rc.local")]),t._v(" (adjust it accordingly if you use native build), right before the "),e("code",[t._v("exit 0")]),t._v(" line:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /home/pi "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" ./bin/px4 -d -s px4.config "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" px4.log\n")])])])])}),[],!1,null,null,null);s.default=n.exports},807:function(t,s,a){t.exports=a.p+"assets/img/hardware-rpi2.44769dea.jpg"}}]);
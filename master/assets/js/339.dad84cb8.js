(window.webpackJsonp=window.webpackJsonp||[]).push([[339],{1128:function(t,s,a){t.exports=a.p+"assets/img/architecture.94eff761.png"},1129:function(t,s,a){t.exports=a.p+"assets/img/architecture_ros2.f0ce052c.png"},1130:function(t,s,a){t.exports=a.p+"assets/img/architecture_ros.a06cff99.png"},2096:function(t,s,a){"use strict";a.r(s);var e=a(19),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"rtps-ros2-interface-px4-fastrtps-bridge"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rtps-ros2-interface-px4-fastrtps-bridge"}},[t._v("#")]),t._v(" RTPS/ROS2 Interface: PX4-FastRTPS Bridge")]),t._v(" "),e("p",[t._v("The "),e("em",[t._v("PX4-FastRTPS Bridge")]),t._v(" adds a Real Time Publish Subscribe (RTPS) interface to PX4, enabling the exchange of "),e("RouterLink",{attrs:{to:"/ko/middleware/uorb.html"}},[t._v("uORB messages")]),t._v(" between PX4 components and (offboard) "),e("em",[t._v("Fast RTPS")]),t._v(" applications (including those built using the ROS2/ROS frameworks).")],1),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("Note")]),t._v(" RTPS is the underlying protocol of the Object Management Group's (OMG) Data Distribution Service (DDS) standard. It aims to enable scalable, real-time, dependable, high-performance and inter-operable data communication using the publish/subscribe pattern. "),e("em",[t._v("Fast RTPS")]),t._v(" is a very lightweight cross-platform implementation of the latest version of the RTPS protocol and a minimum DDS API.")])]),t._v(" "),e("p",[t._v("RTPS has been adopted as the middleware for the ROS2 (Robot Operating System). The "),e("em",[t._v("Fast RTPS bridge")]),t._v(" allows us to better integrate with ROS2, making it easy to share sensor values, commands, and other vehicle information.")]),t._v(" "),e("p",[t._v("This topic describes the RTPS bridge architecture (and how it is used within the ROS2/ROS application pipeline). It also shows how to compile needed code to:")]),t._v(" "),e("ol",[e("li",[t._v("Write a simple "),e("em",[t._v("Fast RTPS")]),t._v(" application to subscribe to PX4 changes")]),t._v(" "),e("li",[t._v("Connect ROS2 nodes with PX4 (via the RTPS Bridge, and using the "),e("code",[t._v("px4_ros_com")]),t._v(" package)")]),t._v(" "),e("li",[t._v('Connect ROS (ROS "version 1") nodes with PX4 by additionally using the '),e("code",[t._v("ros1_bridge")]),t._v(" package to bridge ROS2 and ROS.")])]),t._v(" "),e("h2",{attrs:{id:"when-should-rtps-be-used"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#when-should-rtps-be-used"}},[t._v("#")]),t._v(" When should RTPS be used?")]),t._v(" "),e("p",[t._v("RTPS should be used when you need to reliably share time-critical/real-time information between the flight controller and off board components. In particular it is useful in cases where off-board software needs to become a "),e("em",[t._v("peer")]),t._v(" of software components running in PX4 (by sending and receiving uORB topics).")]),t._v(" "),e("p",[t._v("Possible use cases include communicating with robotics libraries for computer vision, and other use cases where real time data to/from actuators and sensors is essential for vehicle control.")]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("Note")]),t._v(" "),e("em",[t._v("Fast RTPS")]),t._v(" is not intended as a replacement for MAVLink. MAVLink remains the most appropriate protocol for communicating with ground stations, gimbals, cameras, and other offboard components (although "),e("em",[t._v("Fast RTPS")]),t._v(" may open other opportunities for working with some peripherals).")])]),t._v(" "),e("p",[e("span")]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("Note")]),t._v(" This should not be a problem if "),e("RouterLink",{attrs:{to:"/ko/setup/fast-rtps-installation.html"}},[t._v("Fast RTPS is installed in the default location")]),t._v(".")],1)]),t._v(" "),e("h2",{attrs:{id:"architectural-overview"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#architectural-overview"}},[t._v("#")]),t._v(" Architectural overview")]),t._v(" "),e("h3",{attrs:{id:"rtps-bridge"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rtps-bridge"}},[t._v("#")]),t._v(" RTPS Bridge")]),t._v(" "),e("p",[t._v("The RTPS bridge exchanges messages between PX4 and RTPS applications, seamlessly converting between the "),e("RouterLink",{attrs:{to:"/ko/middleware/uorb.html"}},[t._v("uORB")]),t._v(" and RTPS messages used by each system.")],1),t._v(" "),e("p",[e("img",{attrs:{src:a(1128),alt:"basic example flow"}})]),t._v(" "),e("p",[t._v("The main elements of the architecture are the client and agent processes shown in the diagram above.")]),t._v(" "),e("ul",[e("li",[t._v("The "),e("em",[t._v("Client")]),t._v(" is PX4 middleware daemon process that runs on the flight controller. It subscribes to uORB topics published by other PX4 components and sends any updates to the "),e("em",[t._v("Agent")]),t._v(" (via a UART or UDP port). It also receives messages from the "),e("em",[t._v("Agent")]),t._v(" and publishes them as uORB message on PX4.")]),t._v(" "),e("li",[t._v("The "),e("em",[t._v("Agent")]),t._v(" runs as a daemon process on an offboard computer. It watches for uORB update messages from the "),e("em",[t._v("Client")]),t._v(' and (re)publishes them over RTPS. It also subscribes to "uORB" RTPS messages from other RTPS applications and forwards them to the '),e("em",[t._v("Client")]),t._v(".")]),t._v(" "),e("li",[t._v("The "),e("em",[t._v("Agent")]),t._v(" and "),e("em",[t._v("Client")]),t._v(" are connected via a serial link (UART) or UDP network. The uORB information is "),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Common_Data_Representation",target:"_blank",rel:"noopener noreferrer"}},[t._v("CDR serialized"),e("OutboundLink")],1),t._v(" for sending ("),e("em",[t._v("CDR serialization")]),t._v(" provides a common format for exchanging serial data between different platforms).")]),t._v(" "),e("li",[t._v("The "),e("em",[t._v("Agent")]),t._v(" and any "),e("em",[t._v("Fast RTPS")]),t._v(" applications are connected via UDP, and may be on the same or another device. In a typical configuration they will both be on the same system (e.g. a development computer, Linux companion computer or compute board), connected to the "),e("em",[t._v("Client")]),t._v(" over a Wifi link or via USB.")])]),t._v(" "),e("h3",{attrs:{id:"ros2-ros-application-pipeline"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ros2-ros-application-pipeline"}},[t._v("#")]),t._v(" ROS2/ROS application pipeline")]),t._v(" "),e("p",[t._v("The application pipeline for ROS2 is very straightforward! Because ROS2 uses DDS/RTPS as its native communications middleware, you can create a ROS2 listener or advertiser node to publish and subscribe to uORB data on PX4, via the "),e("em",[t._v("PX4 Fast RTPS Bridge")]),t._v(". This is shown below.")]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("Note")]),t._v(" You do need to make sure that the message types, headers and source files used on both client and agent side (and consequently, on the ROS nodes) are generated from the same Interface Description Language (IDL) files. The "),e("code",[t._v("px4_ros_com")]),t._v(" package provides the needed infrastructure for generating messages and headers needed by ROS2.")])]),t._v(" "),e("p",[e("img",{attrs:{src:a(1129),alt:"Architecture with ROS2"}})]),t._v(" "),e("p",[t._v("The architecture for integrating ROS applications with PX4 is shown below.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(1130),alt:"Architecture with ROS"}})]),t._v(" "),e("p",[t._v("Note the use of "),e("a",{attrs:{href:"https://github.com/ros2/ros1_bridge",target:"_blank",rel:"noopener noreferrer"}},[t._v("ros1_bridge"),e("OutboundLink")],1),t._v(", which bridges messages between ROS2 and ROS. This is needed because the first version of ROS does not support RTPS.")]),t._v(" "),e("h2",{attrs:{id:"code-generation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#code-generation"}},[t._v("#")]),t._v(" Code generation")]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("Note")]),t._v(" The requirement for this package should soon be deprecated, as "),e("code",[t._v("rosidl_generate_dds_interfaces")]),t._v(" CMake tools will be used to generate the required IDL files (instead of only using "),e("code",[t._v("rosidl_generate_interfaces")]),t._v(").")])]),t._v(" "),e("h3",{attrs:{id:"ros-independent-applications"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ros-independent-applications"}},[t._v("#")]),t._v(" ROS-independent applications")]),t._v(" "),e("p",[t._v("All the code needed to create, build and use the bridge is automatically generated when the PX4 Firmware is compiled.")]),t._v(" "),e("p",[t._v("The "),e("em",[t._v("Client")]),t._v(" application is also compiled and built into the firmware as part of the normal build process. The "),e("em",[t._v("Agent")]),t._v(" must be separately/manually compiled for the target computer.")]),t._v(" "),e("p",[e("span")]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("Tip")]),t._v(" The bridge code can also be "),e("RouterLink",{attrs:{to:"/ko/middleware/micrortps_manual_code_generation.html"}},[t._v("manually generated")]),t._v(". Most users will not need to do so, but the linked topic provides a more detailed overview of the build process and can be useful for troubleshooting.")],1)]),t._v(" "),e("p",[e("a",{attrs:{id:"px4_ros_com"}})]),t._v(" "),e("h3",{attrs:{id:"ros2-ros-applications"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ros2-ros-applications"}},[t._v("#")]),t._v(" ROS2/ROS applications")]),t._v(" "),e("p",[t._v("The "),e("a",{attrs:{href:"https://github.com/PX4/px4_ros_com",target:"_blank",rel:"noopener noreferrer"}},[t._v("px4_ros_com"),e("OutboundLink")],1),t._v(" package, when built, generates everything needed to access PX4 uORB messages from a ROS2 node (for ROS you also need "),e("a",{attrs:{href:"https://github.com/ros2/ros1_bridge",target:"_blank",rel:"noopener noreferrer"}},[t._v("ros1_bridge"),e("OutboundLink")],1),t._v("). This includes all the required components of the "),e("em",[t._v("PX4 RTPS bridge")]),t._v(", including the IDL files (required by the "),e("code",[t._v("micrortps_agent")]),t._v("), the "),e("code",[t._v("micrortps_agent")]),t._v(" itself and the sources and headers of the ROS messages.")]),t._v(" "),e("p",[t._v("The ROS and ROS2 message definition headers and interfaces are generated from the "),e("a",{attrs:{href:"https://github.com/PX4/px4_msgs",target:"_blank",rel:"noopener noreferrer"}},[t._v("px4_msgs"),e("OutboundLink")],1),t._v(" package, which match the uORB messages counterparts under PX4-Autopilot. These are required by "),e("code",[t._v("px4_ros_com")]),t._v(" when generating the IDL files to be used by the "),e("code",[t._v("micrortps_agent")]),t._v(".")]),t._v(" "),e("p",[t._v("Both branches additionally include some example listener and advertiser example nodes.")]),t._v(" "),e("ul",[e("li",[t._v("a "),e("code",[t._v("master")]),t._v(" branch, used with ROS2. It contains code to generate all the required ROS2 messages and IDL files to bridge PX4 with ROS2 nodes.")]),t._v(" "),e("li",[t._v("a "),e("code",[t._v("ros1")]),t._v(" branch, used with ROS. It contains code to generate the ROS message headers and source files, which can be used "),e("em",[t._v("with")]),t._v(" the "),e("code",[t._v("ros1_bridge")]),t._v(" to share data between PX4 and ROS.")])]),t._v(" "),e("p",[t._v("Both branches in "),e("code",[t._v("px4_ros_com")]),t._v(" additionally include some example listener and advertiser example nodes.")]),t._v(" "),e("h2",{attrs:{id:"supported-uorb-messages"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#supported-uorb-messages"}},[t._v("#")]),t._v(" Supported uORB messages")]),t._v(" "),e("p",[t._v("The generated bridge code will enable a specified subset of uORB topics to be published/subscribed via RTPS. This is true for both ROS or non-ROS applications.")]),t._v(" "),e("p",[t._v("For "),e("em",[t._v("automatic code generation")]),t._v(" there's a "),e("em",[t._v("yaml")]),t._v(" definition file in the PX4 "),e("strong",[t._v("Firmware/msg/tools/")]),t._v(" directory called "),e("strong",[t._v("uorb_rtps_message_ids.yaml")]),t._v(". This file defines the set of uORB messages to be used with RTPS, whether the messages are to be sent, received or both, and the RTPS ID for the message to be used in DDS/RTPS middleware.")]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("Note")]),t._v(" An RTPS ID must be set for all messages.")])]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rtps")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("msg")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actuator_armed\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("msg")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actuator_control\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("msg")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" airspeed\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("send")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("msg")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" battery_status\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("send")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("msg")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" camera_capture\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("msg")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" camera_trigger\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("receive")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("msg")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" sensor_baro\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("63")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("receive")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("send")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n")])])]),e("blockquote",[e("p",[e("strong",[t._v("Note")]),t._v(" The "),e("code",[t._v("px4_ros_com")]),t._v(" build process (only) runs the CMake macro "),e("code",[t._v("rosidl_generate_interfaces()")]),t._v(" to generate ROS2 IDL files and all the source and header files for each message. The PX4 Firmware includes a template for the IDL file generation, which is only used during the PX4 build process.")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("px4_ros_com")]),t._v(" build generates "),e("em",[t._v("slightly different")]),t._v(" IDL files for use with ROS2/ROS (than are built for PX4 firmware). The "),e("strong",[t._v("uorb_rtps_message_ids.yaml")]),t._v(" is transformed in a way that the message names become "),e("em",[t._v("PascalCased")]),t._v(" (the name change is irrelevant to the client-agent communication, but is critical for ROS2, since the message naming must follow the PascalCase convention). The new IDL files also reverse the messages that are sent and received (required because if a message is sent from the client side, then it's received on the agent side, and vice-versa).")])]),t._v(" "),e("p",[e("a",{attrs:{id:"client_firmware"}})]),t._v(" "),e("h2",{attrs:{id:"client-px4-firmware"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#client-px4-firmware"}},[t._v("#")]),t._v(" Client (PX4 Firmware)")]),t._v(" "),e("p",[t._v("The "),e("em",[t._v("Client")]),t._v(" source code is generated, compiled and built into the PX4 firmware as part of the normal build process.")]),t._v(" "),e("p",[t._v("To build the firmware for NuttX/Pixhawk flight controllers use the "),e("code",[t._v("_rtps")]),t._v(" feature in the configuration target. For example, to build RTPS for px4_fmu-v4:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" px4_fmu-v4_rtps\n")])])]),e("p",[t._v("To build the firmware for a SITL target:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" px4_sitl_rtps\n")])])]),e("p",[t._v("The "),e("em",[t._v("Client")]),t._v(" application can be launched from "),e("RouterLink",{attrs:{to:"/ko/debug/system_console.html"}},[t._v("NuttShell/System Console")]),t._v(". The command syntax is shown below (you can specify a variable number of arguments):")],1),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" micrortps_client start"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("stop "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  -t "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("transport"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("UART"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("UDP"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Default UART\n  -d "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("device"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("             UART device. Default /dev/ttyACM0\n  -u "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("update_time_ms"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("     Time "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" ms "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" uORB subscribed topics update. Default "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  -l "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("loops"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("              How many iterations will this program have. -1 "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" infinite. Default -1.\n  -w "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("sleep_time_ms"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("      Time "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" ms "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("which")]),t._v(" each iteration sleep. Default 1ms\n  -b "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("baudrate"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("           UART device baudrate. Default "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("460800")]),t._v("\n  -p "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("poll_ms"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("            Time "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" ms to poll over UART. Default 1ms\n  -r "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("reception port"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("     UDP port "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" receiving. Default "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),t._v("\n  -s "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("sending port"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("       UDP port "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" sending. Default "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v("\n  -i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ip_address"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("         Select IP address "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("remote"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" values: "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("x.x.x.x"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(". Default: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1\n")])])]),e("blockquote",[e("p",[e("strong",[t._v("Note")]),t._v(" By default the "),e("em",[t._v("Client")]),t._v(" runs as a daemon, but you will need to start it manually. The PX4 Firmware initialization code may in future automatically start the "),e("em",[t._v("Client")]),t._v(" as a permanent daemon process.")])]),t._v(" "),e("p",[t._v("For example, in order to run the "),e("em",[t._v("Client")]),t._v(" daemon with SITL connecting to the Agent via UDP, start the daemon as shown:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("micrortps_client start -t UDP\n")])])]),e("h2",{attrs:{id:"agent-in-a-ros-independent-offboard-fast-rtps-interface"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agent-in-a-ros-independent-offboard-fast-rtps-interface"}},[t._v("#")]),t._v(" Agent in a ROS-independent Offboard Fast RTPS interface")]),t._v(" "),e("p",[t._v("The "),e("em",[t._v("Agent")]),t._v(" code is automatically "),e("em",[t._v("generated")]),t._v(" when you build the associated PX4 firmware. You can find the source here: "),e("strong",[t._v("build/"),e("target-platform",[t._v("/src/modules/micrortps_bridge/micrortps_client/micrortps_agent/")])],1),t._v(".")]),t._v(" "),e("p",[t._v("To build the "),e("em",[t._v("Agent")]),t._v(" application, compile the code:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" build/"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("target-platform"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/src/modules/micrortps_bridge/micrortps_client/micrortps_agent\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" build "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" build\ncmake "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v("\n")])])]),e("blockquote",[e("p",[e("strong",[t._v("Note")]),t._v(" To cross-compile for the "),e("em",[t._v("Qualcomm Snapdragon Flight")]),t._v(" platform see "),e("a",{attrs:{href:"https://github.com/eProsima/PX4-FastRTPS-PoC-Snapdragon-UDP#how-to-use",target:"_blank",rel:"noopener noreferrer"}},[t._v("this link"),e("OutboundLink")],1),t._v(".")])]),t._v(" "),e("p",[t._v("The command syntax for the "),e("em",[t._v("Agent")]),t._v(" is listed below:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ ./micrortps_agent "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  -t "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("transport"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("UART"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("UDP"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Default UART.\n  -d "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("device"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("             UART device. Default /dev/ttyACM0.\n  -w "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("sleep_time_us"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("      Time "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" us "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("which")]),t._v(" each iteration sleep. Default 1ms.\n  -b "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("baudrate"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("           UART device baudrate. Default "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("460800")]),t._v(".\n  -p "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("poll_ms"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("            Time "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" ms to poll over UART. Default 1ms.\n  -r "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("reception port"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("     UDP port "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" receiving. Default "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2019")]),t._v(".\n  -s "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("sending port"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("       UDP port "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" sending. Default "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v(".\n")])])]),e("p",[t._v("To launch the "),e("em",[t._v("Agent")]),t._v(", run "),e("code",[t._v("micrortps_agent")]),t._v(" with appropriate options for specifying the connection to the "),e("em",[t._v("Client")]),t._v(" (the default options connect from a Linux device to the "),e("em",[t._v("Client")]),t._v(" over a UART port).")]),t._v(" "),e("p",[t._v("As an example, to start the "),e("em",[t._v("micrortps_agent")]),t._v(" with connection through UDP, issue:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("./micrortps_agent -t UDP\n")])])]),e("h2",{attrs:{id:"agent-interfacing-with-a-ros2-middleware"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agent-interfacing-with-a-ros2-middleware"}},[t._v("#")]),t._v(" Agent interfacing with a ROS2 middleware")]),t._v(" "),e("p",[t._v("Building "),e("code",[t._v("px4_ros_com")]),t._v(" automatically generates and builds the agent application. Since it is also installed using the "),e("a",{attrs:{href:"http://design.ros2.org/articles/build_tool.html",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("colcon")]),e("OutboundLink")],1),t._v(" build tools, running it works exactly the same way as the above. Check the "),e("strong",[t._v("Building the "),e("code",[t._v("px4_ros_com")]),t._v(" package")]),t._v(" for details about the build structure.")]),t._v(" "),e("h2",{attrs:{id:"building-the-px4-ros-com-package"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#building-the-px4-ros-com-package"}},[t._v("#")]),t._v(" Building the "),e("code",[t._v("px4_ros_com")]),t._v(" package")]),t._v(" "),e("p",[t._v("In order to install ROS Melodic and ROS2 Bouncy on a Ubuntu 18.04 machine, follow the links below, respectively:")]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("Note")]),t._v(" Only the master branch is needed for ROS2 (both are needed to target ROS).")])]),t._v(" "),e("h3",{attrs:{id:"installing-ros-and-ros2-and-respective-dependencies"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#installing-ros-and-ros2-and-respective-dependencies"}},[t._v("#")]),t._v(" Installing ROS and ROS2 and respective dependencies")]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("Note")]),t._v(" This install and build guide is also applicable in an environment with Ubuntu 16.04, ROS Kinetic and ROS2 Ardent installed.")])]),t._v(" "),e("p",[t._v("In order to install ROS Melodic and ROS2 Dashing (officially supported) on a Ubuntu 18.04 machine, follow the links below, respectively:")]),t._v(" "),e("ol",[e("li",[e("p",[e("a",{attrs:{href:"http://wiki.ros.org/melodic/Installation/Ubuntu",target:"_blank",rel:"noopener noreferrer"}},[t._v("Install ROS Melodic"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://index.ros.org/doc/ros2/Installation/Dashing/Linux-Install-Debians/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Install ROS2 Bouncy"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[t._v("The install process should also install the "),e("em",[t._v("colcon")]),t._v(" build tools, but in case that doesn't happen, you can install the tools manually:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" python3-colcon-common-extensions\n")])])])]),t._v(" "),e("li",[e("p",[e("em",[t._v("eigen3_cmake_module")]),t._v(" is also required, since Eigen3 is used on the transforms library:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" ros-bouncy-rmw-opensplice-cpp\n")])])])]),t._v(" "),e("li",[e("p",[e("em",[t._v("setuptools")]),t._v(" must also be installed (using "),e("em",[t._v("pip")]),t._v(" or "),e("em",[t._v("apt")]),t._v("):")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" pip3 "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -U setuptools\n")])])]),e("blockquote",[e("p",[t._v("> "),e("strong",[t._v("Caution")]),t._v(" Do not install the "),e("code",[t._v("ros1_bridge")]),t._v(" package through the deb repository. The package must be built from source.")])])])]),t._v(" "),e("h3",{attrs:{id:"setting-up-the-workspaces"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setting-up-the-workspaces"}},[t._v("#")]),t._v(" Setting up the workspaces")]),t._v(" "),e("p",[t._v("Since the ROS2 and ROS require different environments you will need a separate workspace for each ROS version. As an example:")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("For ROS2, create a workspace using:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p ~/px4_ros_com_ros2/src\n")])])]),e("p",[t._v("Then, clone the respective ROS2 ("),e("code",[t._v("master")]),t._v(") branch to the "),e("code",[t._v("/src")]),t._v(" directory:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/PX4/px4_ros_com.git ~/px4_ros_com_ros2/src/px4_ros_com "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# clones the master branch")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("For ROS, follow exactly the same process, but create a different directory and clone a different branch:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p ~/px4_ros_com_ros1/src\n")])])]),e("p",[t._v("Then, clone the respective ROS2 ("),e("code",[t._v("ros1")]),t._v(") branch to the "),e("code",[t._v("/src")]),t._v(" directory:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/PX4/px4_ros_com.git ~/px4_ros_com_ros1/src/px4_ros_com -b ros1 "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# clones the 'ros1' branch")]),t._v("\n")])])])])]),t._v(" "),e("h3",{attrs:{id:"building-the-workspaces"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#building-the-workspaces"}},[t._v("#")]),t._v(" Building the workspaces")]),t._v(" "),e("p",[t._v("The directory "),e("code",[t._v("px4_ros_com/scripts")]),t._v(" contains multiple scripts that can be used to build both workspaces.")]),t._v(" "),e("p",[t._v("To build both workspaces with a single script, use the "),e("code",[t._v("build_all.bash")]),t._v(". Check the usage with "),e("code",[t._v("source build_all.bash --help")]),t._v(". The most common way of using it is by passing the ROS(1) workspace directory path and also the PX4 Firmware directory path:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" build_all.bash --ros1_ws_dir "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("path/to/px4_ros_com_ros1/ws"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --px4_firmware_dir "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("path/to/PX4/Firmware"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),e("blockquote",[e("p",[e("strong",[t._v("Note")]),t._v(" Using the "),e("code",[t._v("--verbose")]),t._v(" argument will allow you to see the full "),e("em",[t._v("colcon")]),t._v(" build output.")])]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("Note")]),t._v(" The build process will open new tabs on the console, corresponding to different stages of the build process that need to have different environment configurations sourced.")])]),t._v(" "),e("p",[t._v("One can also use the following individual scripts in order to build the individual parts:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("build_ros1_bridge.bash")]),t._v(", to build the "),e("code",[t._v("ros1_bridge")]),t._v(";")]),t._v(" "),e("li",[e("code",[t._v("build_ros2_workspace.bash")]),t._v(" (only the "),e("code",[t._v("ros1")]),t._v(" branch of "),e("code",[t._v("px4_ros_com")]),t._v("), to build the ROS1 workspace to where the "),e("code",[t._v("px4_ros_com")]),t._v(" "),e("code",[t._v("ros1")]),t._v(" branch was cloned;")]),t._v(" "),e("li",[e("code",[t._v("build_ros2_workspace.bash")]),t._v(", to build the ROS2 workspace to where the "),e("code",[t._v("px4_ros_com")]),t._v(" "),e("code",[t._v("master")]),t._v(" branch was cloned;")])]),t._v(" "),e("p",[t._v("The steps below show how to "),e("em",[t._v("manually")]),t._v(" build the packages (provided for your information/better understanding only):")]),t._v(" "),e("ol",[e("li",[e("p",[e("code",[t._v("cd")]),t._v(" into "),e("code",[t._v("px4_ros_com_ros2")]),t._v(" dir and source the ROS2 environment. Don't mind if it tells you that a previous workspace was set before:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" /opt/ros/bouncy/setup.bash\n")])])])]),t._v(" "),e("li",[e("p",[t._v("Clone the "),e("code",[t._v("ros1_bridge")]),t._v(" package so it can be built on the ROS2 workspace:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/ros2/ros1_bridge.git ~/px4_ros_com_ros2/src/ros1_bridge\n")])])])]),t._v(" "),e("li",[e("p",[t._v("Build the "),e("code",[t._v("px4_ros_com")]),t._v(" package, excluding the "),e("code",[t._v("ros1_bridge")]),t._v(" package:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("colcon build --symlink-install --packages-skip ros1_bridge --event-handlers console_direct+\n")])])]),e("blockquote",[e("p",[e("strong",[t._v("Note")]),t._v(" "),e("code",[t._v("--event-handlers console_direct+")]),t._v(" only serves the purpose of adding verbosity to the "),e("code",[t._v("colcon")]),t._v(' build process and can be removed if one wants a more "quiet" build.')])])]),t._v(" "),e("li",[e("p",[t._v("Then, follows the process of building the ROS(1) packages side. For that, one requires to source the environments so when the "),e("code",[t._v("ros1_bridge")]),t._v(" is built with support for any messages that are on PATH and have an associated mapping between ROS1 and ROS2:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" /opt/ros/melodic/setup.bash\n "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" /opt/ros/bouncy/setup.bash\n")])])])]),t._v(" "),e("li",[e("p",[t._v("Build the "),e("code",[t._v("px4_ros_com")]),t._v(" package on the ROS end:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ~/px4_ros_com_ros1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" colcon build --symlink-install --event-handlers console_direct+\n")])])])]),t._v(" "),e("li",[e("p",[t._v("Then source the workspaces:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" ~/px4_ros_com_ros1/install/setup.bash\n "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" ~/px4_ros_com_ros2/install/setup.bash\n")])])])]),t._v(" "),e("li",[e("p",[t._v("Finally, build the "),e("code",[t._v("ros1_bridge")]),t._v(". Note that the build process may consume a lot of memory resources. On a resource limited machine, reduce the number of jobs being processed in parallel (e.g. set environment variable "),e("code",[t._v("MAKEFLAGS=-j1")]),t._v("). For more details on the build process, see the build instructions on the "),e("a",{attrs:{href:"https://github.com/ros2/ros1_bridge",target:"_blank",rel:"noopener noreferrer"}},[t._v("ros1_bridge"),e("OutboundLink")],1),t._v(" package page.")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ~/px4_ros_com_ros2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" colcon build --symlink-install --packages-select ros1_bridge --cmake-force-configure --event-handlers console_direct+\n")])])])])]),t._v(" "),e("h3",{attrs:{id:"cleaning-the-workspaces"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cleaning-the-workspaces"}},[t._v("#")]),t._v(" Cleaning the workspaces")]),t._v(" "),e("p",[t._v("After building the workspaces there are many files that must be deleted before you can do a clean/fresh build (for example, after you have changed some code and want to rebuild). Unfortunately "),e("em",[t._v("colcon")]),t._v(" does not currently have a way of cleaning the generated "),e("strong",[t._v("build")]),t._v(", "),e("strong",[t._v("install")]),t._v(" and "),e("strong",[t._v("log")]),t._v(" directories, so these directories must be deleted manually.")]),t._v(" "),e("p",[t._v("The "),e("strong",[t._v("clean_all.bash")]),t._v(" script (in "),e("strong",[t._v("px4_ros_com/scripts")]),t._v(") is provided to ease this cleaning process. The most common way of using it is by passing it the ROS(1) workspace directory path (since it's usually not on the default path):")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" clean_all.bash --ros1_ws_dir "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("path/to/px4_ros_com_ros1/ws"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),e("h2",{attrs:{id:"creating-a-fast-rtps-listener-application"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-fast-rtps-listener-application"}},[t._v("#")]),t._v(" Creating a Fast RTPS Listener application")]),t._v(" "),e("p",[t._v("Once the "),e("em",[t._v("Client")]),t._v(" (on the flight controller) and the "),e("em",[t._v("Agent")]),t._v(" (on an offboard computer) are running and connected, "),e("em",[t._v("Fast RTPS")]),t._v(" applications can publish and subscribe to uORB topics on PX4 using RTPS.")]),t._v(" "),e("p",[t._v("This example shows how to create a "),e("em",[t._v("Fast RTPS")]),t._v(' "listener" application that subscribes to the '),e("code",[t._v("sensor_combined")]),t._v(" topic and prints out updates (from PX4). A connected RTPS application can run on any computer on the same network as the "),e("em",[t._v("Agent")]),t._v(". For this example the "),e("em",[t._v("Agent")]),t._v(" and "),e("em",[t._v("Listener application")]),t._v(" will be on the same computer.")]),t._v(" "),e("p",[t._v("The "),e("em",[t._v("fastrtpsgen")]),t._v(" script can be used to generate a simple RTPS application from an IDL message file.")]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("Note")]),t._v(" RTPS messages are defined in IDL files and compiled to C++ using "),e("em",[t._v("fastrtpsgen")]),t._v(". As part of building the bridge code, IDL files are generated for the uORB message files that may be sent/received (see "),e("strong",[t._v("build/BUILDPLATFORM/src/modules/micrortps_bridge/micrortps_agent/idl/*.idl")]),t._v("). These IDL files are needed when you create a "),e("em",[t._v("Fast RTPS")]),t._v(" application to communicate with PX4.")])]),t._v(" "),e("p",[t._v("Enter the following commands to create the application:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /path/to/PX4/Firmware/src/modules/micrortps_bridge\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" micrortps_listener\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" micrortps_listener\nfastrtpsgen -example x64Linux2.6gcc "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/micrortps_agent/idl/sensor_combined_.idl\n")])])]),e("p",[t._v("This creates a basic subscriber and publisher, and a main-application to run them. To print out the data from the "),e("code",[t._v("sensor_combined")]),t._v(" topic, modify the "),e("code",[t._v("onNewDataMessage()")]),t._v(" method in "),e("strong",[t._v("sensor_combined_Subscriber.cxx")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" sensor_combined_Subscriber"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SubListener")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("onNewDataMessage")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Subscriber"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" sub"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Take data")]),t._v("\n    sensor_combined_ st"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sub"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeNextData")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("st"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("m_info"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m_info"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sampleKind "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" ALIVE"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Print your structure data here.")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("n_msg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sample received, count="')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" n_msg "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"============================="')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gyro_rad: "')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" st"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("gyro_rad")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("at")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" st"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("gyro_rad")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("at")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" st"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("gyro_rad")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("at")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gyro_integral_dt: "')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" st"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("gyro_integral_dt")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"accelerometer_timestamp_relative: "')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" st"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("accelerometer_timestamp_relative")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"accelerometer_m_s2: "')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" st"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("accelerometer_m_s2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("at")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" st"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("accelerometer_m_s2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("at")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" st"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("accelerometer_m_s2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("at")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"accelerometer_integral_dt: "')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" st"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("accelerometer_integral_dt")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"magnetometer_timestamp_relative: "')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" st"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("magnetometer_timestamp_relative")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"magnetometer_ga: "')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" st"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("magnetometer_ga")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("at")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" st"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("magnetometer_ga")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("at")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" st"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("magnetometer_ga")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("at")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"baro_timestamp_relative: "')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" st"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("baro_timestamp_relative")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"baro_alt_meter: "')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" st"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("baro_alt_meter")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"baro_temp_celcius: "')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" st"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("baro_temp_celcius")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("To build and run the application on Linux:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" -f makefile_x64Linux2.6gcc\nbin/*/sensor_combined_PublisherSubscriber subscriber\n")])])]),e("p",[t._v("Now you should see the sensor information being printed out:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("Sample received, "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("count")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10119")]),t._v("\nReceived sensor_combined data\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\ngyro_rad: -0.0103228, "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0140477")]),t._v(", "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.000319406")]),t._v("\ngyro_integral_dt: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.004")]),t._v("\naccelerometer_timestamp_relative: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\naccelerometer_m_s2: -2.82708, -6.34799, -7.41101\naccelerometer_integral_dt: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.004")]),t._v("\nmagnetometer_timestamp_relative: -10210\nmagnetometer_ga: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.60171")]),t._v(", "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0405879")]),t._v(", -0.040995\nbaro_timestamp_relative: -17469\nbaro_alt_meter: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("368.647")]),t._v("\nbaro_temp_celcius: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("43.93")]),t._v("\n")])])]),e("blockquote",[e("p",[e("strong",[t._v("Note")]),t._v(" If the "),e("em",[t._v("Listener application")]),t._v(" does not print anything, make sure the "),e("em",[t._v("Client")]),t._v(" is running.")])]),t._v(" "),e("h2",{attrs:{id:"creating-a-ros2-listener"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-ros2-listener"}},[t._v("#")]),t._v(" Creating a ROS2 listener")]),t._v(" "),e("p",[t._v("With the "),e("code",[t._v("px4_ros_com")]),t._v(" built successfully, one can now take advantage of the generated "),e("em",[t._v("micro-RTPS")]),t._v(" agent app and also from the generated sources and headers of the ROS2 msgs, which represent a one-to-one matching with the uORB counterparts.")]),t._v(" "),e("p",[t._v("To create a listener node on ROS2, lets take as an example the "),e("code",[t._v("sensor_combined_listener.cpp")]),t._v(" node under "),e("code",[t._v("px4_ros_com/src/listeners")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("<rclcpp/rclcpp.hpp>")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("<px4_ros_com/msg/sensor_combined.hpp>")])]),t._v("\n")])])]),e("p",[t._v("The above brings to use the required C++ libraries to interface with the ROS2 middleware. It also includes the required message header file.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @brief Sensor Combined uORB topic data callback\n */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SensorCombinedListener")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token base-clause"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" rclcpp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n")])])]),e("p",[t._v("The above creates a "),e("code",[t._v("SensorCombinedListener")]),t._v(" class that subclasses the generic "),e("code",[t._v("rclcpp::Node")]),t._v(" base class.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("subscription_ "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("create_subscription"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("px4_ros_com"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("msg"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("SensorCombined"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SensorCombined_topic"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    rclcpp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Subscription"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("px4_ros_com"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("msg"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("SensorCombined"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("SharedPtr subscription_"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("This creates a callback function for when the "),e("code",[t._v("sensor_combined")]),t._v(" messages are received. It outputs the content of the message fields each time the message is received.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("explicit")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("SensorCombinedListener")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Node")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sensor_combined_listener"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" callback "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" px4_ros_com"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("msg"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("SensorCombined"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("SharedPtr msg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"RECEIVED DATA ON SENSOR COMBINED"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"================================"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gyro_rad[0]: "')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" msg"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("gyro_rad"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gyro_rad[1]: "')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" msg"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("gyro_rad"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gyro_rad[2]: "')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" msg"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("gyro_rad"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gyro_integral_dt: "')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" msg"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("gyro_integral_dt "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"accelerometer_timestamp_relative: "')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" msg"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("accelerometer_timestamp_relative "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"accelerometer_m_s2[0]: "')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" msg"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("accelerometer_m_s2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"accelerometer_m_s2[1]: "')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" msg"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("accelerometer_m_s2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"accelerometer_m_s2[2]: "')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" msg"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("accelerometer_m_s2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"accelerometer_integral_dt: "')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" msg"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("accelerometer_integral_dt "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("The above create a subscription to the "),e("code",[t._v("sensor_combined_topic")]),t._v(" which can be matched with one or more compatible ROS publishers.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" argc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("argv"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Starting sensor_combined listener node..."')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setvbuf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("stdout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _IONBF"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" BUFSIZ"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    rclcpp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("argc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" argv"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    rclcpp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("spin")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("make_shared"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("SensorCombinedListener"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    rclcpp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("shutdown")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("The instantiation of the "),e("code",[t._v("SensorCombinedListener")]),t._v(" class as a ROS node is done on the "),e("code",[t._v("main")]),t._v(" function.")]),t._v(" "),e("h2",{attrs:{id:"creating-a-ros2-advertiser"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-ros2-advertiser"}},[t._v("#")]),t._v(" Creating a ROS2 advertiser")]),t._v(" "),e("p",[t._v("A ROS2 advertiser node publishes data into the DDS/RTPS network (and hence to PX4).")]),t._v(" "),e("p",[t._v("Taking as an example the "),e("code",[t._v("debug_vect_advertiser.cpp")]),t._v(" under "),e("code",[t._v("px4_ros_com/src/listeners")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("<chrono>")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("<rclcpp/rclcpp.hpp>")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("<px4_ros_com/msg/debug_vect.hpp>")])]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("chrono_literals"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("Bring in the required headers, including the "),e("code",[t._v("debug_vect")]),t._v(" msg header.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DebugVectAdvertiser")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token base-clause"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" rclcpp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n")])])]),e("p",[t._v("The above creates a "),e("code",[t._v("DebugVectAdvertiser")]),t._v(" class that subclasses the generic "),e("code",[t._v("rclcpp::Node")]),t._v(" base class.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DebugVectAdvertiser")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Node")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"debug_vect_advertiser"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        publisher_ "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("create_publisher"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("px4_ros_com"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("msg"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("DebugVect"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DebugVect_topic"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" timer_callback "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" debug_vect "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" px4_ros_com"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("msg"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DebugVect")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            debug_vect"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timestamp "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("nanoseconds")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1E-3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            debug_vect"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            debug_vect"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            debug_vect"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("z "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("RCLCPP_INFO")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_logger")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Publishing debug_vect: time: %f x:%f y:%f z:%f"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                debug_vect"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timestamp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" debug_vect"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" debug_vect"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" debug_vect"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("z"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("publisher_"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("publish")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("debug_vect"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        timer_ "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("create_wall_timer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v("ms"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" timer_callback"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    rclcpp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("TimerBase"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("SharedPtr timer_"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    rclcpp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Publisher"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("px4_ros_com"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("msg"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("DebugVect"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("SharedPtr publisher_"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("This creates a function for when messages are to be sent. The messages are sent based on a timed callback, which sends two messages per second based on a timer.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" argc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("argv"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("cout "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Starting debug_vect advertiser node..."')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setvbuf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("stdout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _IONBF"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" BUFSIZ"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    rclcpp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("argc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" argv"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    rclcpp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("spin")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("make_shared"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("DebugVectAdvertiser"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    rclcpp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("shutdown")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("The instantiation of the "),e("code",[t._v("DebugVectAdvertiser")]),t._v(" class as a ROS node is done on the "),e("code",[t._v("main")]),t._v(" function.")]),t._v(" "),e("h2",{attrs:{id:"creating-a-ros-listener"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-ros-listener"}},[t._v("#")]),t._v(" Creating a ROS listener")]),t._v(" "),e("p",[t._v("The creation of ROS nodes is a well known and documented process. An example of a ROS listener for "),e("code",[t._v("sensor_combined")]),t._v(" messages can be found in the "),e("code",[t._v("ros1")]),t._v(" branch repo, under "),e("code",[t._v("px4_ros_com/src/listeners")]),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"examples-tests-of-ros-independent-apps"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#examples-tests-of-ros-independent-apps"}},[t._v("#")]),t._v(" Examples/tests of ROS-independent apps")]),t._v(" "),e("p",[t._v("The following examples provide additional real-world demonstrations of how to use the features described in this topic.")]),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/ko/middleware/micrortps_throughput_test.html"}},[t._v("Throughput test")]),t._v(": A simple test to measure the throughput of the bridge.")],1)]),t._v(" "),e("h2",{attrs:{id:"testing-the-px4-fastrpts-bridge-with-ros2-and-ros"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#testing-the-px4-fastrpts-bridge-with-ros2-and-ros"}},[t._v("#")]),t._v(" Testing the PX4-FastRPTS bridge with ROS2 and ROS")]),t._v(" "),e("p",[t._v("To quickly test the package (using PX4 SITL with Gazebo):")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("Start PX4 SITL with Gazebo using:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" px4_sitl_rtps gazebo\n")])])])]),t._v(" "),e("li",[e("p",[t._v("On one terminal, source the ROS2 environment and workspace and launch the "),e("code",[t._v("ros1_bridge")]),t._v(" (this allows ROS2 and ROS nodes to communicate with each other). Also set the "),e("code",[t._v("ROS_MASTER_URI")]),t._v(" where the "),e("code",[t._v("roscore")]),t._v(" is/will be running:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" /opt/ros/ardent/setup.bash\n $ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" ~/px4_ros_com_ros2/install/setup.bash\n $ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ROS_MASTER_URI")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("http://localhost:11311\n $ ros2 run ros1_bridge dynamic_bridge\n")])])])]),t._v(" "),e("li",[e("p",[t._v("On another terminal, source the ROS workspace and launch the "),e("code",[t._v("sensor_combined")]),t._v(" listener node. Since you are launching through "),e("code",[t._v("roslaunch")]),t._v(", this will also automatically start the "),e("code",[t._v("roscore")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" ~/px4_ros_com_ros1/install/setup.bash\n $ roslaunch px4_ros_com sensor_combined_listener.launch\n")])])])]),t._v(" "),e("li",[e("p",[t._v("On a terminal, source the ROS2 workspace and then start the "),e("code",[t._v("micrortps_agent")]),t._v(" daemon with UDP as the transport protocol:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" ~/px4_ros_com_ros2/install/setup.bash\n $ micrortps_agent -t UDP\n")])])])]),t._v(" "),e("li",[e("p",[t._v("On the "),e("RouterLink",{attrs:{to:"/ko/debug/system_console.html"}},[t._v("NuttShell/System Console")]),t._v(", start the "),e("code",[t._v("micrortps_client")]),t._v(" daemon also in UDP:")],1),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" micrortps_client start -t UDP\n")])])]),e("p",[t._v("Now you will be able to see the data being printed on the terminal/console where you launched the ROS listener:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("RECEIVED DATA FROM SENSOR COMBINED\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\n gyro_rad"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00341645")]),t._v("\n gyro_rad"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00626475")]),t._v("\n gyro_rad"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": -0.000515705\n gyro_integral_dt: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4739")]),t._v("\n accelerometer_timestamp_relative: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n accelerometer_m_s2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": -0.273381\n accelerometer_m_s2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0949186")]),t._v("\n accelerometer_m_s2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": -9.76044\n accelerometer_integral_dt: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4739")]),t._v("\n\n Publishing back"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])]),e("p",[t._v("You can also verify the rate of the message using "),e("code",[t._v("rostopic hz")]),t._v(". For the case of "),e("code",[t._v("sensor_combined")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("average rate: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("248.187")]),t._v("\n min: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".000s max: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".012s std dev: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".00147s window: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2724")]),t._v("\n average rate: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("248.006")]),t._v("\n min: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".000s max: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".012s std dev: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".00147s window: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2972")]),t._v("\n average rate: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("247.330")]),t._v("\n min: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".000s max: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".012s std dev: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".00148s window: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3212")]),t._v("\n average rate: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("247.497")]),t._v("\n min: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".000s max: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".012s std dev: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".00149s window: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3464")]),t._v("\n average rate: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("247.458")]),t._v("\n min: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".000s max: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".012s std dev: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".00149s window: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3712")]),t._v("\n average rate: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("247.485")]),t._v("\n min: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".000s max: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".012s std dev: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".00148s window: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3960")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("You can also test the "),e("code",[t._v("sensor_combined")]),t._v(" ROS2 listener by typing in a terminal:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" ~/px4_ros_com_ros2/install/setup.bash\n $ sensor_combined_listener "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# or ros2 run px4_ros_com sensor_combined_listener")]),t._v("\n")])])])])]),t._v(" "),e("p",[t._v("And it should also get data being printed to the console output.")]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("Note")]),t._v(" If ones uses the "),e("code",[t._v("build_all.bash")]),t._v(" script, it automatically open and source all the required terminals so one just has to run the respective apps in each terminal.")])]),t._v(" "),e("h2",{attrs:{id:"troubleshooting"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#troubleshooting"}},[t._v("#")]),t._v(" Troubleshooting")]),t._v(" "),e("h3",{attrs:{id:"client-reports-that-selected-uart-port-is-busy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#client-reports-that-selected-uart-port-is-busy"}},[t._v("#")]),t._v(" Client reports that selected UART port is busy")]),t._v(" "),e("p",[t._v("If the selected UART port is busy, it's possible that the MAVLink application is already being used. If both MAVLink and RTPS connections are required you will have to either move the connection to use another port or configure the port so that it can be shared.\n")]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("Tip")]),t._v(" A quick/temporary fix to allow bridge testing during development is to stop MAVLink from "),e("em",[t._v("NuttShell")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code")])])]),t._v(" "),e("p",[t._v("sh\nmavlink stop-all")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("\n### Agent not built/fastrtpsgen is not found\n\nThe *Agent* code is generated using a *Fast RTPS* tool called *fastrtpsgen*.\n\nIf you haven't installed Fast RTPS in the default path then you must specify its installation directory by setting the `FASTRTPSGEN_DIR` environment variable before executing *make*.\n\nOn Linux/Mac this is done as shown below:\n\n```sh\nexport FASTRTPSGEN_DIR=/path/to/fastrtps/install/folder/bin\n")])])]),e("blockquote",[e("p",[e("strong",[t._v("Note")]),t._v(" "),e("RouterLink",{attrs:{to:"/ko/setup/fast-rtps-installation.html"}},[t._v("Fast RTPS must be installed")]),t._v(" in order to generate the required code! "),e("em",[t._v("Fast RTPS")]),t._v(" is installed "),e("em",[t._v("by default")]),t._v(" if you use the normal installers/scripts for "),e("RouterLink",{attrs:{to:"/ko/setup/dev_env_mac.html"}},[t._v("macOS")]),t._v(", "),e("RouterLink",{attrs:{to:"/ko/setup/dev_env_windows_cygwin.html"}},[t._v("Windows Cygwin")]),t._v(" or "),e("RouterLink",{attrs:{to:"/ko/setup/dev_env_linux_ubuntu.html"}},[t._v("Ubuntu")]),t._v(".")],1)]),t._v(" "),e("h3",{attrs:{id:"enable-uart-on-an-obc-onboard-computer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#enable-uart-on-an-obc-onboard-computer"}},[t._v("#")]),t._v(" Enable UART on an OBC (onboard computer)")]),t._v(" "),e("p",[t._v("For UART transport on a Raspberry Pi or any other OBC you will have to enable the serial port:")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("Make sure the "),e("code",[t._v("userid")]),t._v(" (default is pi on a Raspberry Pi) is a member of the "),e("code",[t._v("dialout")]),t._v(" group:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("groups")]),t._v(" pi\n "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("usermod")]),t._v(" -a -G dialout pi\n")])])])]),t._v(" "),e("li",[e("p",[t._v("For the Raspberry Pi in particular, you need to stop the GPIO serial console that is using the port:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" raspi-config\n")])])]),e("p",[t._v("In the menu showed go to "),e("strong",[t._v("Interfacing options > Serial")]),t._v(". Select "),e("strong",[t._v("NO")]),t._v(" for "),e("em",[t._v("Would you like a login shell to be accessible over serial?")]),t._v(". Valid and reboot.")])]),t._v(" "),e("li",[e("p",[t._v("Check UART in kernel:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" /boot/config.txt\n")])])]),e("p",[t._v("And make sure that the "),e("code",[t._v("enable_uart")]),t._v(" value is set to 1:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" enable_uart=1\n")])])])])]),t._v(" "),e("h2",{attrs:{id:"additional-information"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#additional-information"}},[t._v("#")]),t._v(" Additional information")]),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/ko/dev_setup/fast-rtps-installation.html"}},[t._v("Fast RTPS Installation")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/ko/middleware/micrortps_manual_code_generation.html"}},[t._v("Manually Generate Client and Agent Code")])],1),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/ros2/ros2/wiki/DDS-and-ROS-middleware-implementations",target:"_blank",rel:"noopener noreferrer"}},[t._v("DDS and ROS middleware implementations"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[682],{2587:function(a,t,s){"use strict";s.r(t);var n=s(19),e=Object(n.a)({},(function(){var a=this,t=a.$createElement,n=a._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h1",{attrs:{id:"gazebo-与-ros-仿真"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gazebo-与-ros-仿真"}},[a._v("#")]),a._v(" Gazebo 与 ROS 仿真")]),a._v(" "),n("p",[n("RouterLink",{attrs:{to:"/zh/ros/"}},[a._v(" ROS")]),a._v("（机器人操作系统）可与 PX4 和"),n("RouterLink",{attrs:{to:"/zh/simulation/gazebo.html"}},[a._v(" Gazebo 模拟器")]),a._v("一起使用。 它使用"),n("RouterLink",{attrs:{to:"/zh/ros/mavros_installation.html"}},[a._v(" MAVROS")]),a._v(" MAVLink 节点与 PX4 通信。")],1),a._v(" "),n("p",[a._v("ROS/Gazebo 与 PX4 的集成遵循下图中的模式（这显示了* generic * "),n("RouterLink",{attrs:{to:"/zh/simulation/#sitl-simulation-environment"}},[a._v(" PX4 simulation environment ")]),a._v("）。 PX4 与模拟器（例如 Gazebo）通信以从模拟世界接收传感器数据并发送电机和执行器值。 它与 GCS 和 Offboard API（例如 ROS）通信，以从模拟环境发送遥测数据并接收命令。")],1),a._v(" "),n("p",[n("img",{attrs:{src:s(369),alt:"PX4 SITL 概述"}})]),a._v(" "),n("blockquote",[n("p",[a._v("**Note *"),n("em",[a._v("与“正常行为”的唯一")]),a._v(" slight *差异是 ROS 在端口 14557 上启动连接，而外部 API 更典型地侦听 UDP 端口上的连接 14540。")])]),a._v(" "),n("h2",{attrs:{id:"安装-ros-和-gazebo"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装-ros-和-gazebo"}},[a._v("#")]),a._v(" 安装 ROS 和 Gazebo")]),a._v(" "),n("blockquote",[n("p",[a._v("**Note ** * ROS *仅在 Linux（不是 macOS 或 Windows）上受支持。")])]),a._v(" "),n("p",[a._v("在 Ubuntu Linux 上使用 ROS 设置 PX4 仿真的最简单方法是使用标准安装脚本，可以在"),n("RouterLink",{attrs:{to:"/zh/setup/dev_env_linux.html#gazebo-with-ros"}},[a._v(" Development Environment on Linux > Gazebo with ROS ")]),a._v("中找到。 该脚本安装了您需要的一切：PX4，ROS“Kinetic”，Gazebo 7 模拟器和"),n("RouterLink",{attrs:{to:"/zh/ros/mavros_installation.html"}},[a._v(" MAVROS ")]),a._v("。")],1),a._v(" "),n("blockquote",[n("p",[n("strong",[a._v("Note")]),a._v(" 该脚本遵循 "),n("a",{attrs:{href:"http://wiki.ros.org/kinetic/Installation/Ubuntu",target:"_blank",rel:"noopener noreferrer"}},[a._v('standard ROS "Kinetic" installation instructions'),n("OutboundLink")],1),a._v("，其中包括 Gazebo 7。")])]),a._v(" "),n("h2",{attrs:{id:"启动-ros-simulation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#启动-ros-simulation"}},[a._v("#")]),a._v(" 启动 ROS/Simulation")]),a._v(" "),n("p",[a._v("以下命令可用于启动仿真并通过"),n("RouterLink",{attrs:{to:"/zh/ros/mavros_installation.html"}},[a._v(" MAVROS ")]),a._v("将 ROS 连接到它，其中"),n("code",[a._v("fcu_url")]),a._v("是运行仿真的计算机的 IP /端口：")],1),a._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[a._v("roslaunch mavros px4.launch fcu_url:"),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[a._v('"udp://:14540@192.168.1.36:14557"')]),a._v("\n")])])]),n("p",[a._v("要连接到本地主机，请使用以下 URL：")]),a._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[a._v("roslaunch mavros px4.launch fcu_url:"),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[a._v('"udp://:14540@127.0.0.1:14557"')]),a._v("\n")])])]),n("blockquote",[n("p",[n("strong",[a._v("Tip")]),a._v(" 使用"),n("code",[a._v("-w")]),a._v("（警告）和/或"),n("code",[a._v("-v")]),a._v("（详细）调用* roslaunch *以获取有关设置中缺少依赖项的警告可能会很有用。 例如：")]),a._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code")])])]),a._v(" "),n("p",[a._v('roslaunch mavros px4.launch fcu_url:="udp://:14540@127.0.0.1:14557"')]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("\n\n## 用 ROS Wrappers 启动 Gazebo\n\n可以对 Gazebo 模拟进行修改，以直接集成发布到 ROS 主题 （如 Gazebo ROS 激光插件）的传感器。 要支持此功能，必须使用适当的 ROS wrappers 启动 Gazebo。\n\n有 ROS 启动脚本可用于运行包含在 ROS 中的模拟：\n\n* [ posix_sitl.launch ](https://github.com/PX4/Firmware/blob/master/launch/posix_sitl.launch)：简单的 SITL 发布\n* [ mavros_posix_sitl.launch ](https://github.com/PX4/Firmware/blob/master/launch/mavros_posix_sitl.launch)：SITL 和 MAVROS\n\n要运行包含在 ROS 中的 SITL，需要更新 ROS 环境，然后像往常一样启动：\n\n（可选）：如果您从源代码编译 MAVROS 或其他 ROS 包，则仅获取 catkin 工作区：\n\n```sh\ncd <Firmware_clone>\nmake px4_sitl_default gazebo\nsource ~/catkin_ws/devel/setup.bash    // (optional)\nsource Tools/setup_gazebo.bash $(pwd) $(pwd)/build/px4_sitl_default\nexport ROS_PACKAGE_PATH=$ROS_PACKAGE_PATH:$(pwd)\nexport ROS_PACKAGE_PATH=$ROS_PACKAGE_PATH:$(pwd)/Tools/sitl_gazebo\nroslaunch px4 posix_sitl.launch\n")])])]),n("p",[a._v("在您自己的启动文件中包含上述启动文件之一，以在模拟中运行 ROS 应用程序。")]),a._v(" "),n("h2",{attrs:{id:"事件之后发生了什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#事件之后发生了什么"}},[a._v("#")]),a._v(" 事件之后发生了什么")]),a._v(" "),n("p",[a._v("本节显示了之前提供的* roslaunch *指令实际上是如何工作的（您可以按照它们手动启动模拟和 ROS 系统）。")]),a._v(" "),n("p",[a._v("首先使用以下命令启动模拟器：")]),a._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("no_sim")]),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" px4_sitl_default gazebo\n")])])]),n("p",[a._v("控制台将如下所示：")]),a._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("init"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" shell id: "),n("span",{pre:!0,attrs:{class:"token number"}},[a._v("46979166467136")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("init"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" task name: px4\n\n______  __   __    ___\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" ___ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v(" / /   /   "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("_/ /  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v(" V /   / /"),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("  __/   /   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("  / /_"),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("     / /^"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("___  "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("_"),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("/   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("/     "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("_/\n\nReady to fly.\n\n\nINFO  LED::init\n"),n("span",{pre:!0,attrs:{class:"token number"}},[a._v("729")]),a._v(" DevObj::init led\n"),n("span",{pre:!0,attrs:{class:"token number"}},[a._v("736")]),a._v(" Added driver 0x2aba34001080 /dev/led0\nINFO  LED::init\n"),n("span",{pre:!0,attrs:{class:"token number"}},[a._v("742")]),a._v(" DevObj::init led\nINFO  Not using /dev/ttyACM0 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" radio control input. Assuming joystick input via MAVLink.\nINFO  Waiting "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" initial data on UDP. Please start the flight simulator to proceed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("\n\n\nINFO  LED::init\n"),n("span",{pre:!0,attrs:{class:"token number"}},[a._v("729")]),a._v(" DevObj::init led\n"),n("span",{pre:!0,attrs:{class:"token number"}},[a._v("736")]),a._v(" Added driver 0x2aba34001080 /dev/led0\nINFO  LED::init\n"),n("span",{pre:!0,attrs:{class:"token number"}},[a._v("742")]),a._v(" DevObj::init led\nINFO  Not using /dev/ttyACM0 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" radio control input. Assuming joystick input via MAVLink.\nINFO  Waiting "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" initial data on UDP. Please start the flight simulator to proceed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("\n")])])]),n("p",[a._v("现在在新终端中确保您可以通过 Gazebo 菜单插入 Iris 模型，为此设置环境变量以包含相应的"),n("code",[a._v("sitl_gazebo")]),a._v("文件夹。")]),a._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("Firmware_clone"),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("source")]),a._v(" Tools/setup_gazebo.bash "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("pwd")]),n("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("pwd")]),n("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("/build/px4_sitl_default\n")])])]),n("p",[a._v("现在就像使用 ROS 并插入 Iris 四轴飞行器模型一样启动 Gazebo。 一旦 Iris 被加载，它将自动连接到 Px4 应用程序。")]),a._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[a._v("roslaunch gazebo_ros empty_world.launch world_name:"),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("pwd")]),n("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("/Tools/sitl_gazebo/worlds/iris.world\n")])])])])}),[],!1,null,null,null);t.default=e.exports},369:function(a,t,s){a.exports=s.p+"assets/img/px4_sitl_overview.d8cf146a.png"}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[179],{1530:function(t,e,a){"use strict";a.r(e);var s=a(19),o=Object(s.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"building-px4-software"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#building-px4-software"}},[t._v("#")]),t._v(" Building PX4 Software")]),t._v(" "),s("p",[t._v("PX4 can be built on the console or in an IDE, for both simulated and hardware targets.")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("Note")]),t._v(" Before following these instructions you must first install the "),s("RouterLink",{attrs:{to:"/en/dev_setup/dev_env.html"}},[t._v("Developer Toolchain")]),t._v(" for your host operating system and target hardware.")],1)]),t._v(" "),s("p",[s("span")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("Tip")]),t._v(" For solutions to common build problems see "),s("a",{attrs:{href:"#troubleshooting"}},[t._v("Troubleshooting")]),t._v(" below.")])]),t._v(" "),s("p",[s("a",{attrs:{id:"get_px4_code"}})]),t._v(" "),s("h2",{attrs:{id:"download-the-px4-source-code"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#download-the-px4-source-code"}},[t._v("#")]),t._v(" Download the PX4 Source Code")]),t._v(" "),s("p",[t._v("The PX4 source code is stored on Github in the "),s("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot",target:"_blank",rel:"noopener noreferrer"}},[t._v("PX4/PX4-Autopilot"),s("OutboundLink")],1),t._v(" repository.\nTo get the "),s("em",[t._v("very latest")]),t._v(" version onto your computer, enter the following command into a terminal:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/PX4/PX4-Autopilot.git --recursive\n")])])]),s("blockquote",[s("p",[s("strong",[t._v("Note")]),t._v(" This is all you need to do just to build the latest code.\n"),s("RouterLink",{attrs:{to:"/en/contribute/git_examples.html#contributing_code"}},[t._v("GIT Examples > Contributing code to PX4")]),t._v(" provides a lot more information about using git to contribute to PX4.")],1)]),t._v(" "),s("p",[s("a",{attrs:{id:"jmavsim_build"}})]),t._v(" "),s("h2",{attrs:{id:"first-build-using-the-jmavsim-simulator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#first-build-using-the-jmavsim-simulator"}},[t._v("#")]),t._v(" First Build (Using the jMAVSim Simulator)")]),t._v(" "),s("p",[t._v("First we'll build a simulated target using a console environment.\nThis allows us to validate the system setup before moving on to real hardware and an IDE.")]),t._v(" "),s("p",[t._v("Navigate into the "),s("strong",[t._v("PX4-Autopilot")]),t._v(" directory and start "),s("RouterLink",{attrs:{to:"/en/simulation/jmavsim.html"}},[t._v("jMAVSim")]),t._v(" using the following command:")],1),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" px4_sitl jmavsim\n")])])]),s("p",[t._v("This will bring up the PX4 console below:")]),t._v(" "),s("p",[s("img",{attrs:{src:a(673),alt:"PX4 Console (jMAVSim)"}})]),t._v(" "),s("p",[t._v("The drone can be flown by typing:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("pxh"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" commander takeoff\n")])])]),s("p",[s("img",{attrs:{src:a(674),alt:"jMAVSim UI"}})]),t._v(" "),s("p",[t._v("The drone can be landed by typing "),s("code",[t._v("commander land")]),t._v(" and the whole simulation can be stopped by doing "),s("strong",[t._v("CTRL+C")]),t._v(" (or by entering "),s("code",[t._v("shutdown")]),t._v(").")]),t._v(" "),s("p",[t._v("Flying the simulation with the ground control station is closer to the real operation of the vehicle.\nClick on a location in the map while the vehicle is flying (takeoff flight mode) and enable the slider.\nThis will reposition the vehicle.")]),t._v(" "),s("p",[s("img",{attrs:{src:a(354),alt:"QGroundControl GoTo"}})]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("Tip")]),t._v(" PX4 can be used with a number of other "),s("RouterLink",{attrs:{to:"/en/simulation/"}},[t._v("Simulators")]),t._v(", including "),s("RouterLink",{attrs:{to:"/en/simulation/gazebo.html"}},[t._v("Gazebo Simulation")]),t._v(" and "),s("RouterLink",{attrs:{to:"/en/simulation/airsim.html"}},[t._v("AirSim Simulation")]),t._v(".\nThese are also started with "),s("em",[t._v("make")]),t._v(" - e.g.")],1)]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("make px4_sitl gazebo\n")])])]),s("p",[s("a",{attrs:{id:"nuttx"}})]),t._v(" "),s("h2",{attrs:{id:"nuttx-pixhawk-based-boards"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nuttx-pixhawk-based-boards"}},[t._v("#")]),t._v(" NuttX / Pixhawk Based Boards")]),t._v(" "),s("p",[s("a",{attrs:{id:"building_nuttx"}})]),t._v(" "),s("h3",{attrs:{id:"building"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#building"}},[t._v("#")]),t._v(" Building")]),t._v(" "),s("p",[t._v("To build for NuttX- or Pixhawk- based boards, navigate into the "),s("strong",[t._v("PX4-Autopilot")]),t._v(" directory and then call "),s("code",[t._v("make")]),t._v(" with the build target for your board.")]),t._v(" "),s("p",[t._v("For example, to build for "),s("em",[t._v("Pixracer")]),t._v(" you would use the following command:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" PX4-Autopilot\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" px4_fmu-v4_default\n")])])]),s("blockquote",[s("p",[s("strong",[t._v("Note")]),t._v(" In the example above the first part of the build target "),s("code",[t._v("px4_fmu-v4")]),t._v(" is the firmware for a particular flight controller hardware and "),s("code",[t._v("default")]),t._v(' is the configuration name (in this case the "default" configuration).\nThe '),s("code",[t._v("default")]),t._v(" is optional so you could instead do:")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("make px4_fmu-v4\n")])])]),s("p",[t._v("A successful run will end with similar output to:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("-- Build files have been written to: /home/youruser/src/PX4-Autopilot/build/px4_fmu-v4_default\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("954")]),t._v("/954"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Creating /home/youruser/src/PX4-Autopilot/build/px4_fmu-v4_default/px4_fmu-v4_default.px4\n")])])]),s("p",[t._v("The following list shows the build commands for common boards:")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/en/flight_controller/pixhawk4.html"}},[t._v("Pixhawk 4")]),t._v(": "),s("code",[t._v("make px4_fmu-v5_default")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/en/flight_controller/pixhawk4_mini.html"}},[t._v("Pixhawk 4 Mini")]),t._v(": "),s("code",[t._v("make px4_fmu-v5_default")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/en/flight_controller/cuav_v5_plus.html"}},[t._v("CUAV V5+")]),t._v(": "),s("code",[t._v("make px4_fmu-v5_default")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/en/flight_controller/cuav_v5_nano.html"}},[t._v("CUAV V5 nano")]),t._v(": "),s("code",[t._v("make px4_fmu-v5_default")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/en/flight_controller/kakutef7.html"}},[t._v("Holybro Kakute F7")]),t._v(": "),s("code",[t._v("make holybro_kakutef7_default")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/en/flight_controller/pixracer.html"}},[t._v("Pixracer")]),t._v(": "),s("code",[t._v("make px4_fmu-v4_default")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/en/flight_controller/pixhawk3_pro.html"}},[t._v("Pixhawk 3 Pro")]),t._v(": "),s("code",[t._v("make px4_fmu-v4pro_default")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/en/flight_controller/pixhawk_mini.html"}},[t._v("Pixhawk Mini")]),t._v(": "),s("code",[t._v("make px4_fmu-v3_default")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/en/flight_controller/pixhawk-2.html"}},[t._v("Cube Black")]),t._v(": "),s("code",[t._v("make px4_fmu-v3_default")])],1),t._v(" "),s("li",[t._v("Cube Yellow: "),s("code",[t._v("make hex_cube-yellow")])]),t._v(" "),s("li",[t._v("Cube Orange: "),s("code",[t._v("make hex_cube-orange")])]),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/en/flight_controller/mro_pixhawk.html"}},[t._v("mRo Pixhawk")]),t._v(": "),s("code",[t._v("make px4_fmu-v3_default")]),t._v(" (supports 2MB Flash)")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/en/flight_controller/HKPilot32.html"}},[t._v("HKPilot32")]),t._v(": "),s("code",[t._v("make px4_fmu-v2_default")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/en/flight_controller/pixfalcon.html"}},[t._v("Pixfalcon")]),t._v(": "),s("code",[t._v("make px4_fmu-v2_default")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/en/flight_controller/dropix.html"}},[t._v("Dropix")]),t._v(": "),s("code",[t._v("make px4_fmu-v2_default")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/en/flight_controller/mindpx.html"}},[t._v("MindPX")]),t._v("/"),s("RouterLink",{attrs:{to:"/en/flight_controller/mindracer.html"}},[t._v("MindRacer")]),t._v(": "),s("code",[t._v("make airmind_mindpx-v2_default")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/en/flight_controller/mro_x2.1.html"}},[t._v("mRo X-2.1")]),t._v(": "),s("code",[t._v("make mro_x21_default")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/en/flight_controller/crazyflie2.html"}},[t._v("Crazyflie 2.0")]),t._v(": "),s("code",[t._v("make bitcraze_crazyflie_default")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/en/flight_controller/intel_aero.html"}},[t._v("Intel® Aero Ready to Fly Drone")]),t._v(": "),s("code",[t._v("make intel_aerofc-v1_default")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/en/flight_controller/pixhawk.html"}},[t._v("Pixhawk 1")]),t._v(": "),s("code",[t._v("make px4_fmu-v2_default")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("Warning")]),t._v(" You "),s("strong",[t._v("must")]),t._v(" use a supported version of GCC to build this board (e.g. the same as used by "),s("RouterLink",{attrs:{to:"/en/test_and_ci/docker.html"}},[t._v("CI/docker")]),t._v(") or remove modules from the build. Building with an unsupported GCC may fail, as PX4 is close to the board's 1MB flash limit.")],1)])],1),t._v(" "),s("li",[t._v("Pixhawk 1 with 2 MB flash: "),s("code",[t._v("make px4_fmu-v3_default")])])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("Note")]),t._v(" Generally the "),s("code",[t._v("_default")]),t._v(" suffix is optional (i.e. you can also build using "),s("code",[t._v("make px4_fmu-v4")]),t._v(", "),s("code",[t._v("make bitcraze_crazyflie")]),t._v(", etc.).")])]),t._v(" "),s("h3",{attrs:{id:"uploading-firmware-flashing-the-board"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#uploading-firmware-flashing-the-board"}},[t._v("#")]),t._v(" Uploading Firmware (Flashing the board)")]),t._v(" "),s("p",[t._v("Append "),s("code",[t._v("upload")]),t._v(" to the make commands to upload the compiled binary to the autopilot hardware via USB.\nFor example")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" px4_fmu-v4_default upload\n")])])]),s("p",[t._v("A successful run will end with this output:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("Erase  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100.0")]),t._v("%\nProgram: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100.0")]),t._v("%\nVerify "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100.0")]),t._v("%\nRebooting.\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Built target upload\n")])])]),s("h2",{attrs:{id:"other-boards"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#other-boards"}},[t._v("#")]),t._v(" Other Boards")]),t._v(" "),s("p",[t._v("The following boards have more complicated build and/or deployment instructions.")]),t._v(" "),s("h3",{attrs:{id:"raspberry-pi-2-3-boards"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#raspberry-pi-2-3-boards"}},[t._v("#")]),t._v(" Raspberry Pi 2/3 Boards")]),t._v(" "),s("p",[t._v("The command below builds the target for "),s("RouterLink",{attrs:{to:"/en/flight_controller/raspberry_pi_navio2.html"}},[t._v("Raspberry Pi 2/3 Navio2")]),t._v(".")],1),t._v(" "),s("h4",{attrs:{id:"cross-compiler-build"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cross-compiler-build"}},[t._v("#")]),t._v(" Cross-compiler Build")]),t._v(" "),s("p",[t._v("Set the IP (or hostname) of your RPi using:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("AUTOPILOT_HOST")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".X.X\n")])])]),s("p",[t._v("or")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("AUTOPILOT_HOST")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("pi_hostname.domain\n")])])]),s("blockquote",[s("p",[s("strong",[t._v("Note")]),t._v(" The value of the environment variable should be set before the build, or "),s("code",[t._v("make upload")]),t._v(" will fail to find your RPi.")])]),t._v(" "),s("p",[t._v("Build the executable file:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" PX4-Autopilot\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" emlid_navio2 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for cross-compiler build")]),t._v("\n")])])]),s("p",[t._v('The "px4" executable file is in the directory '),s("strong",[t._v("build/emlid_navio2_default/")]),t._v(".\nMake sure you can connect to your RPi over ssh, see "),s("RouterLink",{attrs:{to:"/en/flight_controller/raspberry_pi_navio2.html#developer-quick-start"}},[t._v("instructions how to access your RPi")]),t._v(".")],1),t._v(" "),s("p",[t._v("Then upload it with:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" PX4-Autopilot\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" emlid_navio2 upload "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for cross-compiler build")]),t._v("\n")])])]),s("p",[t._v("Then, connect over ssh and run it with (as root):")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ~/px4\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" ./bin/px4 -s px4.config\n")])])]),s("h4",{attrs:{id:"native-build"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#native-build"}},[t._v("#")]),t._v(" Native Build")]),t._v(" "),s("p",[t._v("If you're building "),s("em",[t._v("directly")]),t._v(" on the Pi, you will want the native build target (emlid_navio2_native).")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" PX4-Autopilot\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" emlid_navio2_native "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for native build")]),t._v("\n")])])]),s("p",[t._v('The "px4" executable file is in the directory '),s("strong",[t._v("build/emlid_navio2_native/")]),t._v(".\nRun it directly with:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" ./build/emlid_navio2_native/px4 build/emlid_navio2_native/etc -s ./posix-configs/rpi/px4.config\n")])])]),s("p",[t._v("A successful build followed by executing px4 will give you something like this:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("\n______  __   __    ___\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ___ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" / /   /   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_/ /  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" V /   / /"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  __/   /   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("  / /_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     / /^"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("___  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("/   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("/     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_/\n\npx4 starting.\n\n\npxh"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("h4",{attrs:{id:"autostart"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#autostart"}},[t._v("#")]),t._v(" Autostart")]),t._v(" "),s("p",[t._v("To autostart px4, add the following to the file "),s("strong",[t._v("/etc/rc.local")]),t._v(" (adjust it\naccordingly if you use native build), right before the "),s("code",[t._v("exit 0")]),t._v(" line:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /home/pi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" ./bin/px4 -d -s px4.config "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" px4.log\n")])])]),s("h3",{attrs:{id:"ocpoc-zynq-mini"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ocpoc-zynq-mini"}},[t._v("#")]),t._v(" OcPoC-Zynq Mini")]),t._v(" "),s("p",[t._v("Build instructions for the "),s("RouterLink",{attrs:{to:"/en/flight_controller/ocpoc_zynq.html"}},[t._v("OcPoC-Zynq Mini")]),t._v(" are covered in:")],1),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/en/flight_controller/ocpoc_zynq.html#building-px4-for-ocpoc-zynq"}},[t._v("Aerotenna OcPoC-Zynq Mini Flight Controller > Building PX4 for OcPoC-Zynq")]),t._v(" (PX4 User Guide)")],1),t._v(" "),s("li",[s("a",{attrs:{href:"https://aerotenna.readme.io/docs/px4-setup",target:"_blank",rel:"noopener noreferrer"}},[t._v("OcPoC PX4 Setup Page"),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"qurt-snapdragon-based-boards"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#qurt-snapdragon-based-boards"}},[t._v("#")]),t._v(" QuRT / Snapdragon Based Boards")]),t._v(" "),s("p",[t._v("This section shows how to build for the "),s("RouterLink",{attrs:{to:"/en/flight_controller/snapdragon_flight.html"}},[t._v("Qualcomm Snapdragon Flight")]),t._v(".")],1),t._v(" "),s("h4",{attrs:{id:"build"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#build"}},[t._v("#")]),t._v(" Build")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("Note")]),t._v(" If you use the "),s("a",{attrs:{href:"http://shop.intrinsyc.com/products/qualcomm-electronic-speed-control-board",target:"_blank",rel:"noopener noreferrer"}},[t._v("Qualcomm ESC board"),s("OutboundLink")],1),t._v(" (UART-based), then please follow their instructions "),s("a",{attrs:{href:"https://github.com/ATLFlight/ATLFlightDocs/blob/master/PX4.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),s("OutboundLink")],1),t._v(".\nIf you use normal PWM-based ESCs boards, then you may continue to follow the instructions on this page.")])]),t._v(" "),s("p",[t._v("The commands below build the targets for the Linux and the DSP side. Both executables communicate via "),s("RouterLink",{attrs:{to:"/en/middleware/uorb.html"}},[t._v("muORB")]),t._v(".")],1),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" PX4-Autopilot\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" atlflight_eagle_default\n")])])]),s("p",[t._v("To load the SW on the device, connect via USB cable and make sure the device is booted.\nRun this in a new terminal window:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("adb shell\n")])])]),s("p",[t._v("Go back to previous terminal and upload:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" atlflight_eagle_default upload\n")])])]),s("p",[t._v("Note that this will also copy (and overwrite) the two config files "),s("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/master/posix-configs/eagle/flight/mainapp.config",target:"_blank",rel:"noopener noreferrer"}},[t._v("mainapp.config"),s("OutboundLink")],1),t._v(" and "),s("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/master/posix-configs/eagle/flight/px4.config",target:"_blank",rel:"noopener noreferrer"}},[t._v("px4.config"),s("OutboundLink")],1),t._v(" to the device.\nThose files are stored under /usr/share/data/adsp/px4.config and /home/linaro/mainapp.config respectively if you want to edit the startup scripts directly on your vehicle.")]),t._v(" "),s("p",[t._v("The mixer currently needs to be copied manually:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("adb push ROMFS/px4fmu_common/mixers/quad_x.main.mix  /usr/share/data/adsp\n")])])]),s("h4",{attrs:{id:"run"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#run"}},[t._v("#")]),t._v(" Run")]),t._v(" "),s("p",[t._v("Run the DSP debug monitor:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${HEXAGON_SDK_ROOT}")]),t._v("/tools/debug/mini-dm/Linux_Debug/mini-dm\n")])])]),s("p",[t._v("Note: alternatively, especially on Mac, you can also use "),s("a",{attrs:{href:"https://github.com/kevinmehall/nano-dm",target:"_blank",rel:"noopener noreferrer"}},[t._v("nano-dm"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("p",[t._v("Go back to ADB shell and run px4:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /home/linaro\n./px4 -s mainapp.config\n")])])]),s("p",[t._v("Note that the px4 will stop as soon as you disconnect the USB cable (or if you ssh session is disconnected).\nTo fly, you should make the px4 auto-start after boot.")]),t._v(" "),s("h4",{attrs:{id:"autostart-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#autostart-2"}},[t._v("#")]),t._v(" Autostart")]),t._v(" "),s("p",[t._v("To run the px4 as soon as the Snapdragon has booted, you can add the startup to "),s("code",[t._v("rc.local")]),t._v(":")]),t._v(" "),s("p",[t._v("Either edit the file "),s("code",[t._v("/etc/rc.local")]),t._v(" directly on the Snapdragon:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("adb shell\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" /etc/rc.local\n")])])]),s("p",[t._v("Or copy the file to your computer, edit it locally, and copy it back:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("adb pull /etc/rc.local\ngedit rc.local\nadb push rc.local /etc/rc.local\n")])])]),s("p",[t._v("For the auto-start, add the following line before "),s("code",[t._v("exit 0")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cd /home/linaro "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" ./px4 -s mainapp.config "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mainapp.log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),s("p",[t._v("Make sure that the "),s("code",[t._v("rc.local")]),t._v(" is executable:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("adb shell\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" +x /etc/rc.local\n")])])]),s("p",[t._v("Then reboot the Snapdragon:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("adb "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reboot")]),t._v("\n")])])]),s("h2",{attrs:{id:"compiling-in-a-graphical-ide"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#compiling-in-a-graphical-ide"}},[t._v("#")]),t._v(" Compiling in a Graphical IDE")]),t._v(" "),s("p",[t._v("The PX4 system supports Qt Creator, Eclipse and Sublime Text.\nQt Creator is the most user-friendly variant and hence the only officially supported IDE.\nUnless an expert in Eclipse or Sublime, their use is discouraged.\nHardcore users can find an "),s("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/master/eclipse.project",target:"_blank",rel:"noopener noreferrer"}},[t._v("Eclipse project"),s("OutboundLink")],1),t._v(" and a "),s("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/master/Firmware.sublime-project",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sublime project"),s("OutboundLink")],1),t._v(" in the source tree.")]),t._v(" "),s("p",[t._v("{% youtube %}https://www.youtube.com/watch?v=Bkk8zttWxEI&rel=0&vq=hd720{% endyoutube %}")]),t._v(" "),s("h2",{attrs:{id:"qt-creator-functionality"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#qt-creator-functionality"}},[t._v("#")]),t._v(" Qt Creator Functionality")]),t._v(" "),s("p",[t._v("Qt creator offers clickable symbols, auto-completion of the complete codebase and building and flashing firmware.")]),t._v(" "),s("p",[s("img",{attrs:{src:a(675),alt:""}})]),t._v(" "),s("h3",{attrs:{id:"qt-creator-on-linux"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#qt-creator-on-linux"}},[t._v("#")]),t._v(" Qt Creator on Linux")]),t._v(" "),s("p",[t._v("Before starting Qt Creator, the "),s("a",{attrs:{href:"https://gitlab.kitware.com/cmake/community/wikis/doc/cmake/Generator-Specific-Information#codeblocks-generator",target:"_blank",rel:"noopener noreferrer"}},[t._v("project file"),s("OutboundLink")],1),t._v(" needs to be created:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ~/src/PX4-Autopilot\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/Firmware-build\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/Firmware-build\ncmake "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/PX4-Autopilot -G "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CodeBlocks - Unix Makefiles"')]),t._v("\n")])])]),s("p",[t._v("Then load the CMakeLists.txt in the root PX4-Autopilot folder via "),s("strong",[t._v("File > Open File or Project")]),t._v(" (Select the CMakeLists.txt file).")]),t._v(" "),s("p",[t._v("After loading, the "),s("strong",[t._v("play")]),t._v(" button can be configured to run the project by selecting 'custom executable' in the run target configuration and entering 'make' as executable and 'upload' as argument.")]),t._v(" "),s("h3",{attrs:{id:"qt-creator-on-windows"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#qt-creator-on-windows"}},[t._v("#")]),t._v(" Qt Creator on Windows")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("Note")]),t._v(" Windows has not been tested for PX4 development with Qt Creator.")])]),t._v(" "),s("h3",{attrs:{id:"qt-creator-on-mac-os"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#qt-creator-on-mac-os"}},[t._v("#")]),t._v(" Qt Creator on Mac OS")]),t._v(" "),s("p",[t._v("Before starting Qt Creator, the "),s("a",{attrs:{href:"https://gitlab.kitware.com/cmake/community/wikis/doc/cmake/Generator-Specific-Information#codeblocks-generator",target:"_blank",rel:"noopener noreferrer"}},[t._v("project file"),s("OutboundLink")],1),t._v(" needs to be created:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ~/src/PX4-Autopilot\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p build/creator\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" build/creator\ncmake "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(" -G "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CodeBlocks - Unix Makefiles"')]),t._v("\n")])])]),s("p",[t._v("That's it! Start "),s("em",[t._v("Qt Creator")]),t._v(", then complete the steps in the video below to set up the project to build.")]),t._v(" "),s("p",[t._v("{% youtube %}https://www.youtube.com/watch?v=0pa0gS30zNw&rel=0&vq=hd720{% endyoutube %}")]),t._v(" "),s("p",[s("a",{attrs:{id:"make_targets"}})]),t._v(" "),s("h2",{attrs:{id:"px4-make-build-targets"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#px4-make-build-targets"}},[t._v("#")]),t._v(" PX4 Make Build Targets")]),t._v(" "),s("p",[t._v("The previous sections showed how you can call "),s("em",[t._v("make")]),t._v(" to build a number of different targets, start simulators, use IDEs etc.\nThis section shows how "),s("em",[t._v("make")]),t._v(" options are constructed and how to find the available choices.")]),t._v(" "),s("p",[t._v("The full syntax to call "),s("em",[t._v("make")]),t._v(" with a particular configuration and initialization file is:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("VENDOR_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("MODEL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("_VARIANT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("VIEWER_MODEL_DEBUGGER_WORLD"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[s("strong",[t._v("VENDOR_MODEL_VARIANT")]),t._v(": (also known as "),s("code",[t._v("CONFIGURATION_TARGET")]),t._v(")")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("VENDOR:")]),t._v(" The manufacturer of the board: "),s("code",[t._v("px4")]),t._v(", "),s("code",[t._v("aerotenna")]),t._v(", "),s("code",[t._v("airmind")]),t._v(", "),s("code",[t._v("atlflight")]),t._v(", "),s("code",[t._v("auav")]),t._v(", "),s("code",[t._v("beaglebone")]),t._v(", "),s("code",[t._v("intel")]),t._v(", "),s("code",[t._v("nxp")]),t._v(", etc.\nThe vendor name for Pixhawk series boards is "),s("code",[t._v("px4")]),t._v(".")]),t._v(" "),s("li",[s("strong",[t._v("MODEL:")]),t._v(" The "),s("em",[t._v("board model")]),t._v(' "model": '),s("code",[t._v("sitl")]),t._v(", "),s("code",[t._v("fmu-v2")]),t._v(", "),s("code",[t._v("fmu-v3")]),t._v(", "),s("code",[t._v("fmu-v4")]),t._v(", "),s("code",[t._v("fmu-v5")]),t._v(", "),s("code",[t._v("navio2")]),t._v(", etc.")]),t._v(" "),s("li",[s("strong",[t._v("VARIANT:")]),t._v(" Indicates particular configurations: e.g. "),s("code",[t._v("rtps")]),t._v(", "),s("code",[t._v("lpe")]),t._v(", which contain components that are not present in the "),s("code",[t._v("default")]),t._v(" configuration. Most commonly this is "),s("code",[t._v("default")]),t._v(", and may be omitted.")])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("Tip")]),t._v(" You can get a list of "),s("em",[t._v("all")]),t._v(" available "),s("code",[t._v("CONFIGURATION_TARGET")]),t._v(" options using the command below:")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" list_config_targets\n")])])]),s("p",[s("strong",[t._v("VIEWER_MODEL_DEBUGGER_WORLD:")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("VIEWER:")]),t._v(' This is the simulator ("viewer") to launch and connect: '),s("code",[t._v("gazebo")]),t._v(", "),s("code",[t._v("jmavsim")])]),t._v(" "),s("li",[s("strong",[t._v("MODEL:")]),t._v(" The "),s("em",[t._v("vehicle")]),t._v(" model to use (e.g. "),s("code",[t._v("iris")]),t._v(" ("),s("em",[t._v("default")]),t._v("), "),s("code",[t._v("rover")]),t._v(", "),s("code",[t._v("tailsitter")]),t._v(", etc), which will be loaded by the simulator.\nThe environment variable "),s("code",[t._v("PX4_SIM_MODEL")]),t._v(" will be set to the selected model, which is then used in the "),s("RouterLink",{attrs:{to:"/en/dev_setup/..\\simulation\\README.html#scripts"}},[t._v("startup script")]),t._v(" to select appropriate parameters.")],1),t._v(" "),s("li",[s("strong",[t._v("DEBUGGER:")]),t._v(" Debugger to use: "),s("code",[t._v("none")]),t._v(" ("),s("em",[t._v("default")]),t._v("), "),s("code",[t._v("ide")]),t._v(", "),s("code",[t._v("gdb")]),t._v(", "),s("code",[t._v("lldb")]),t._v(", "),s("code",[t._v("ddd")]),t._v(", "),s("code",[t._v("valgrind")]),t._v(", "),s("code",[t._v("callgrind")]),t._v(".\nFor more information see "),s("RouterLink",{attrs:{to:"/en/debug/simulation_debugging.html"}},[t._v("Simulation Debugging")]),t._v(".")],1),t._v(" "),s("li",[s("strong",[t._v("WORLD:")]),t._v(" (Gazebo only). Set a the world ("),s("a",{attrs:{href:"https://github.com/PX4/sitl_gazebo/tree/master/worlds",target:"_blank",rel:"noopener noreferrer"}},[t._v("PX4/sitl_gazebo/worlds"),s("OutboundLink")],1),t._v(") that is loaded.\nDefault is "),s("a",{attrs:{href:"https://github.com/PX4/sitl_gazebo/blob/master/worlds/empty.world",target:"_blank",rel:"noopener noreferrer"}},[t._v("empty.world"),s("OutboundLink")],1),t._v(".\nFor more information see "),s("RouterLink",{attrs:{to:"/en/simulation/gazebo.html#set_world"}},[t._v("Gazebo > Loading a Specific World")]),t._v(".")],1)]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("Tip")]),t._v(" You can get a list of "),s("em",[t._v("all")]),t._v(" available "),s("code",[t._v("VIEWER_MODEL_DEBUGGER_WORLD")]),t._v(" options using the command below:")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" px4_sitl list_vmd_make_targets\n")])])]),s("p",[t._v("Notes:")]),t._v(" "),s("ul",[s("li",[t._v("Most of the values in the "),s("code",[t._v("CONFIGURATION_TARGET")]),t._v(" and "),s("code",[t._v("VIEWER_MODEL_DEBUGGER")]),t._v(" have defaults, and are hence optional.\nFor example, "),s("code",[t._v("gazebo")]),t._v(" is equivalent to "),s("code",[t._v("gazebo_iris")]),t._v(" or "),s("code",[t._v("gazebo_iris_none")]),t._v(".")]),t._v(" "),s("li",[t._v("You can use three underscores if you want to specify a default value between two other settings.\nFor example, "),s("code",[t._v("gazebo___gdb")]),t._v(" is equivalent to "),s("code",[t._v("gazebo_iris_gdb")]),t._v(".")]),t._v(" "),s("li",[t._v("You can use a "),s("code",[t._v("none")]),t._v(" value for "),s("code",[t._v("VIEWER_MODEL_DEBUGGER")]),t._v(" to start PX4 and wait for a simulator.\nFor example start PX4 using "),s("code",[t._v("make px4_sitl_default none")]),t._v(" and jMAVSim using "),s("code",[t._v("./Tools/jmavsim_run.sh -l")]),t._v(".")])]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("VENDOR_MODEL_VARIANT")]),t._v(" options map to particular "),s("em",[t._v("cmake")]),t._v(" configuration files in the PX4 source tree under the "),s("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/tree/master/boards",target:"_blank",rel:"noopener noreferrer"}},[t._v("/boards"),s("OutboundLink")],1),t._v(" directory.\nSpecifically "),s("code",[t._v("VENDOR_MODEL_VARIANT")]),t._v(" maps to a configuration file "),s("strong",[t._v("boards/VENDOR/MODEL/VARIANT.cmake")]),t._v("\n(e.g. "),s("code",[t._v("px4_fmu-v5_default")]),t._v(" corresponds to "),s("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/master/boards/px4/fmu-v5/default.cmake",target:"_blank",rel:"noopener noreferrer"}},[t._v("boards/px4/fmu-v5/default.cmake"),s("OutboundLink")],1),t._v(").")]),t._v(" "),s("p",[t._v("Additional make targets are discussed in the following sections (list is not exhaustive):")]),t._v(" "),s("p",[s("a",{attrs:{id:"bloaty_compare_master"}})]),t._v(" "),s("h3",{attrs:{id:"binary-size-profiling"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#binary-size-profiling"}},[t._v("#")]),t._v(" Binary Size Profiling")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("bloaty_compare_master")]),t._v(" build target allows you to get a better understanding of the impact of changes on code size.\nWhen it is used, the toolchain downloads the latest successful master build of a particular firmware and compares it to the local build (using the "),s("a",{attrs:{href:"https://github.com/google/bloaty",target:"_blank",rel:"noopener noreferrer"}},[t._v("bloaty"),s("OutboundLink")],1),t._v(" size profiler for binaries).")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("Tip")]),t._v(" This can help analyse changes that (may) cause "),s("code",[t._v("px4_fmu-v2_default")]),t._v(" to hit the 1MB flash limit.")])]),t._v(" "),s("p",[s("em",[t._v("Bloaty")]),t._v(" must be in your path and found at "),s("em",[t._v("cmake")]),t._v(" configure time.\nThe PX4 "),s("a",{attrs:{href:"https://github.com/PX4/containers/blob/master/docker/Dockerfile_nuttx-bionic",target:"_blank",rel:"noopener noreferrer"}},[t._v("docker files"),s("OutboundLink")],1),t._v(" install "),s("em",[t._v("bloaty")]),t._v(" as shown:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git clone --recursive https://github.com/google/bloaty.git /tmp/bloaty \\\n\t&& cd /tmp/bloaty && cmake -GNinja . && ninja bloaty && cp bloaty /usr/local/bin/ \\\n\t&& rm -rf /tmp/*\n")])])]),s("p",[t._v("The example below shows how you might see the impact of removing the "),s("em",[t._v("mpu9250")]),t._v(" driver from "),s("code",[t._v("px4_fmu-v2_default")]),t._v(".\nFirst it locally sets up a build without the driver:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v(" % "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --git a/boards/px4/fmu-v2/default.cmake b/boards/px4/fmu-v2/default.cmake\nindex 40d7778"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("2ce7972 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v("\n--- a/boards/px4/fmu-v2/default.cmake\n+++ b/boards/px4/fmu-v2/default.cmake\n@@ -36,7 +36,7 @@ px4_add_board"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                imu/l3gd20\n                imu/lsm303d\n                imu/mpu6000\n-               imu/mpu9250\n+               "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#imu/mpu9250")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#iridiumsbd")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#irlock")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#magnetometer # all available magnetometer drivers")]),t._v("\n")])])]),s("p",[t._v("Then use the make target, specifying the target build to compare ("),s("code",[t._v("px4_fmu-v2_default")]),t._v(" in this case):")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("% "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" px4_fmu-v2_default bloaty_compare_master\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n     VM SIZE                                                                                        FILE SIZE\n --------------                                                                                  --------------\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("     -52 MPU9250::check_null_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("unsigned int*, unsigned char"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                               -52  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("     -52 MPU9250::test_error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                                                -52  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("     -52 MPU9250_gyro::MPU9250_gyro"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MPU9250*, char const*"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                    -52  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("     -56 mpu9250::info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MPU9250_BUS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                                           -56  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("     -56 mpu9250::regdump"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MPU9250_BUS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                                        -56  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".                                        -336  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("    -344 MPU9250_mag::_measure"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ak8963_regs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                                  -344  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("    -684 MPU9250::MPU9250"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("device::Device*, device::Device*, char const*, char const*, cha    -684  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("    -684 MPU9250::init"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                                                     -684  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("   -1000 MPU9250::measure"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                                                 -1000  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n -41.3%   -1011 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("43")]),t._v(" Others"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("                                                                        -1011 -41.3%\n  -1.0% -1.05Ki "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Unmapped"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("                                                                       +24.2Ki  +0.2%\n  -1.0% -10.3Ki TOTAL                                                                            +14.9Ki  +0.1%\n")])])]),s("p",[t._v("This shows that removing "),s("em",[t._v("mpu9250")]),t._v(" from "),s("code",[t._v("px4_fmu-v2_default")]),t._v(" would save 10.3 kB of flash.\nIt also shows the sizes of different pieces of the "),s("em",[t._v("mpu9250")]),t._v(" driver.")]),t._v(" "),s("p",[s("a",{attrs:{id:"firmware_version"}})]),t._v(" "),s("h2",{attrs:{id:"firmware-version-git-tags"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#firmware-version-git-tags"}},[t._v("#")]),t._v(" Firmware Version & Git Tags")]),t._v(" "),s("p",[t._v("The "),s("em",[t._v("PX4 Firmware Version")]),t._v(" and "),s("em",[t._v("Custom Firmware Version")]),t._v(" are published using the MAVLink "),s("a",{attrs:{href:"https://mavlink.io/en/messages/common.html#AUTOPILOT_VERSION",target:"_blank",rel:"noopener noreferrer"}},[t._v("AUTOPILOT_VERSION"),s("OutboundLink")],1),t._v(" message, and displayed in the "),s("em",[t._v("QGroundControl")]),t._v(" "),s("strong",[t._v("Setup > Summary")]),t._v(" airframe panel:")]),t._v(" "),s("p",[s("img",{attrs:{src:a(676),alt:"Firmware info"}})]),t._v(" "),s("p",[t._v("These are extracted at build time from the active "),s("em",[t._v("git tag")]),t._v(" for your repo tree.\nThe git tag should be formatted as "),s("code",[t._v("<PX4-version>-<vendor-version>")]),t._v(" (e.g. the tag in the image above was set to "),s("code",[t._v("v1.8.1-2.22.1")]),t._v(").")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("Warning")]),t._v(" If you use a different git tag format, versions information may not be displayed properly.")])]),t._v(" "),s("p",[s("a",{attrs:{id:"troubleshooting"}})]),t._v(" "),s("h2",{attrs:{id:"troubleshooting"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#troubleshooting"}},[t._v("#")]),t._v(" Troubleshooting")]),t._v(" "),s("h3",{attrs:{id:"general-build-errors"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#general-build-errors"}},[t._v("#")]),t._v(" General Build Errors")]),t._v(" "),s("p",[t._v("Many build problems are caused by either mismatching submodules or an incompletely cleaned-up build environment.\nUpdating the submodules and doing a "),s("code",[t._v("distclean")]),t._v(" can fix these kinds of errors:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git submodule update --recursive\nmake distclean\n")])])]),s("h3",{attrs:{id:"flash-overflowed-by-xxx-bytes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flash-overflowed-by-xxx-bytes"}},[t._v("#")]),t._v(" Flash overflowed by XXX bytes")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("region 'flash' overflowed by XXXX bytes")]),t._v(" error indicates that the firmware is too large for the target hardware platform.\nThis is common for "),s("code",[t._v("make px4_fmu-v2_default")]),t._v(" builds, where the flash size is limited to 1MB.")]),t._v(" "),s("p",[t._v("If you're building the "),s("em",[t._v("vanilla")]),t._v(" master branch, the most likely cause is using an unsupported version of GCC.\nIn this case, install the version specified in the "),s("RouterLink",{attrs:{to:"/en/dev_setup/dev_env.html"}},[t._v("Developer Toolchain")]),t._v(" instructions.")],1),t._v(" "),s("p",[t._v("If building your own branch, it is possibly you have increased the firmware size over the 1MB limit.\nIn this case you will need to remove any drivers/modules that you don't need from the build.")]),t._v(" "),s("p",[s("a",{attrs:{id:"macos_open_files"}})]),t._v(" "),s("h3",{attrs:{id:"macos-too-many-open-fileserror"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#macos-too-many-open-fileserror"}},[t._v("#")]),t._v(" macOS: Too many open fileserror")]),t._v(" "),s("p",[t._v("MacOS allows a default maximum of 256 open files in all running processes.\nThe PX4 build system opens a large number of files, so you may exceed this number.")]),t._v(" "),s("p",[t._v("The build toolchain will then report "),s("code",[t._v("Too many open files")]),t._v(" for many files, as shown below:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("/usr/local/Cellar/gcc-arm-none-eabi/20171218/bin/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/lib/gcc/arm-none-eabi/7.2.1/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/arm-none-eabi/bin/ld: cannot "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),t._v(" NuttX/nuttx/fs/libfs.a: Too many "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),t._v(" files\n")])])]),s("p",[t._v("The solution is to increase the maximum allowed number of open files (e.g. to 300).\nYou can do this in the macOS "),s("em",[t._v("Terminal")]),t._v(" for each session:")]),t._v(" "),s("ul",[s("li",[t._v("Run this script "),s("a",{attrs:{href:"https://github.com/PX4/PX4-Autopilot/blob/master/Tools/mac_set_ulimit.sh",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tools/mac_set_ulimit.sh"),s("OutboundLink")],1),t._v(", or")]),t._v(" "),s("li",[t._v("Enter this command:"),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("ulimit")]),t._v(" -S -n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v("\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"macos-catalina-problem-running-cmake"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#macos-catalina-problem-running-cmake"}},[t._v("#")]),t._v(" macOS Catalina: Problem running cmake")]),t._v(" "),s("p",[t._v("As of macOS Catalina 10.15.1 there may be problems when trying to build the simulator with "),s("em",[t._v("cmake")]),t._v(".\nIf you have build problems on this platform then try run the following command in your terminal:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("xcode-select --install\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ln")]),t._v(" -s /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/* /usr/local/include/\n")])])]),s("h3",{attrs:{id:"failed-to-import-python-packages"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#failed-to-import-python-packages"}},[t._v("#")]),t._v(" Failed to import Python packages")]),t._v(" "),s("p",[t._v('"Failed to import" errors when running the '),s("code",[t._v("make px4_sitl jmavsim")]),t._v(" command indicates that some Python packages are not installed (where expected).")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Failed to import jinja2: No module named 'jinja2'\nYou may need to install it using:\n    pip3 install --user jinja2\n")])])]),s("p",[t._v("If you have already installed these dependencies this may be because there is more than one Python version on the computer (e.g. Python 2.7.16 Python 3.8.3), and the module is not present in the version used by the build toolchain.")]),t._v(" "),s("p",[t._v("You should be able to fix this by explicitly installing the dependencies as shown:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("pip3 install --user pyserial empy toml numpy pandas jinja2 pyyaml pyros-genmsg packaging\n")])])])])}),[],!1,null,null,null);e.default=o.exports},354:function(t,e,a){t.exports=a.p+"assets/img/qgc_goto.f64994ed.jpg"},673:function(t,e,a){t.exports=a.p+"assets/img/console_jmavsim.d6326a19.png"},674:function(t,e,a){t.exports=a.p+"assets/img/jmavsim_first_takeoff.65799ab0.png"},675:function(t,e,a){t.exports=a.p+"assets/img/qtcreator.3041e499.png"},676:function(t,e,a){t.exports=a.p+"assets/img/qgc_setup_summary_airframe_firmware.ec44e092.jpg"}}]);
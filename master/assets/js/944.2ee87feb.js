(window.webpackJsonp=window.webpackJsonp||[]).push([[944],{1922:function(t,e,o){"use strict";o.r(e);var n=o(18),i=Object(n.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"컴퓨터-비전-optical-flow-mocap-vio-avoidance"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#컴퓨터-비전-optical-flow-mocap-vio-avoidance"}},[t._v("#")]),t._v(" 컴퓨터 비전 (Optical Flow, MoCap, VIO, Avoidance)")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://en.wikipedia.org/wiki/Computer_vision",target:"_blank",rel:"noopener noreferrer"}},[t._v("컴퓨터 비전"),o("OutboundLink")],1),t._v("은 컴퓨터가 시각 데이터를 활용하여 실재하는 환경을 이해할 수 있게 하는 기술입니다.")]),t._v(" "),o("p",[t._v("PX4는 다음 기능 지원을 목적으로 컴퓨터 비전 시스템("),o("RouterLink",{attrs:{to:"/ko/companion_computer/pixhawk_companion.html"}},[t._v("보조 컴퓨터")]),t._v("에서 주로 실행)을 활용합니다.")],1),t._v(" "),o("ul",[o("li",[t._v("자세/속도 추정\n"),o("ul",[o("li",[o("RouterLink",{attrs:{to:"/ko/sensor/optical_flow.html"}},[t._v("Optical Flow")]),t._v(" provides 2D velocity estimation (using a downward facing camera and a downward facing distance sensor).")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/ko/computer_vision/motion_capture.html"}},[t._v("Motion Capture")]),t._v(" provides 3D pose estimation using a vision system that is "),o("em",[t._v("external")]),t._v(" to the vehicle. It is primarily used for indoor navigation.")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/ko/computer_vision/visual_inertial_odometry.html"}},[t._v("Visual Inertial Odometry (VIO)")]),t._v(" provides 3D pose and velocity estimation using an onboard vision system and IMU. It is used for navigation when global position information is absent or unreliable.")],1)])]),t._v(" "),o("li",[t._v("Avoidance/Path Planning:\n"),o("ul",[o("li",[o("RouterLink",{attrs:{to:"/ko/computer_vision/obstacle_avoidance.html"}},[t._v("Obstacle Avoidance")]),t._v(" provides full navigation around obstacles when flying a planned path (currently missions are supported). This uses "),o("a",{attrs:{href:"https://github.com/PX4/avoidance",target:"_blank",rel:"noopener noreferrer"}},[t._v("PX4/avoidance"),o("OutboundLink")],1),t._v(" running on a companion computer.")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/ko/computer_vision/collision_prevention.html"}},[t._v("Collision Prevention")]),t._v(" is used to stop vehicles before they can crash into an obstacle (primarily when flying in manual modes).")],1),t._v(" "),o("li",[o("RouterLink",{attrs:{to:"/ko/computer_vision/safe_landing.html"}},[t._v("Safe Landing")]),t._v(" guides vehicles to find (and land on) flat terrain that is free of stationary obstacles.")],1)])])]),t._v(" "),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),o("p",[t._v("The "),o("RouterLink",{attrs:{to:"/ko/complete_vehicles/px4_vision_kit.html"}},[t._v("PX4 Vision Autonomy Development Kit")]),t._v(" (Holybro) is a robust and inexpensive kit for developers working with computer vision on PX4. It comes with "),o("a",{attrs:{href:"https://github.com/PX4/avoidance#obstacle-detection-and-avoidance",target:"_blank",rel:"noopener noreferrer"}},[t._v("PX4 avoidance"),o("OutboundLink")],1),t._v(" software pre-installed, and can be used as the base for your own algorithms.")],1)]),t._v(" "),o("h2",{attrs:{id:"external-resources"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#external-resources"}},[t._v("#")]),t._v(" External Resources")]),t._v(" "),o("ul",[o("li",[o("a",{attrs:{href:"https://github.com/robin-shaun/XTDrone/blob/master/README.en.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("XTDrone"),o("OutboundLink")],1),t._v(" - ROS + PX4 v1.9 simulation environment for computer vision. The "),o("a",{attrs:{href:"https://www.yuque.com/xtdrone/manual_en",target:"_blank",rel:"noopener noreferrer"}},[t._v("XTDrone Manual"),o("OutboundLink")],1),t._v(" has everything you need to get started!")])])])}),[],!1,null,null,null);e.default=i.exports}}]);